<%- include('partials/header', {
  titulo: 'Contas a Receber',
  subtitulo: 'Gerencie seus recebimentos futuros',
  user: locals.user
}) %>

<!-- ACCOUNTS RECEIVABLE WORKSPACE - ENTERPRISE DESIGN -->
<div class="receivables-workspace">
  
  <!-- EXECUTIVE HEADER -->
  <div class="executive-header">
    <div class="header-content">
      <div class="header-main">
        <div class="title-section">
          <h1 class="executive-title">
            <svg class="title-icon" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
              <polyline points="14,2 14,8 20,8"></polyline>
              <line x1="16" y1="13" x2="8" y2="13"></line>
              <line x1="16" y1="17" x2="8" y2="17"></line>
            </svg>
            Contas a Receber
          </h1>
          <p class="executive-subtitle">
            Controle de recebimentos futuros e gestão de créditos
          </p>
        </div>
      </div>
      <div class="header-actions">
        <button type="button" class="btn-executive btn-primary" onclick="abrirModalConta()">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <line x1="12" y1="5" x2="12" y2="19"></line>
            <line x1="5" y1="12" x2="19" y2="12"></line>
          </svg>
          Nova Conta
        </button>
      </div>
    </div>
  </div>

  <!-- INFORMATION ALERT -->
  <div class="info-banner">
    <div class="banner-icon">
      <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <circle cx="12" cy="12" r="10"></circle>
        <line x1="12" y1="16" x2="12" y2="12"></line>
        <line x1="12" y1="8" x2="12.01" y2="8"></line>
      </svg>
    </div>
    <div class="banner-content">
      <strong>Informação importante:</strong> Esta tela exibe apenas as parcelas ainda não vencidas. 
      Parcelas vencidas e não pagas são gerenciadas na seção 
      <a href="/inadimplencia" class="banner-link">Inadimplência</a>.
    </div>
  </div>

  <!-- FILTER CONTROLS -->
  <div class="controls-panel">
    <div class="controls-header">
      <div class="controls-title">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <polygon points="22,3 2,3 10,12.46 10,19 14,21 14,12.46"></polygon>
        </svg>
        Filtros de Período
      </div>
    </div>
    
    <form method="GET" action="/contas-a-receber" class="controls-form">
      <div class="controls-content">
        <div class="control-group">
          <label class="control-label">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
              <line x1="16" y1="2" x2="16" y2="6"></line>
              <line x1="8" y1="2" x2="8" y2="6"></line>
              <line x1="3" y1="10" x2="21" y2="10"></line>
            </svg>
            Data Inicial
          </label>
          <input type="date" name="data_inicio" class="control-input" value="<%= locals.filtros ? filtros.data_inicio : '' %>">
        </div>
        
        <div class="control-group">
          <label class="control-label">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
              <line x1="16" y1="2" x2="16" y2="6"></line>
              <line x1="8" y1="2" x2="8" y2="6"></line>
              <line x1="3" y1="10" x2="21" y2="10"></line>
            </svg>
            Data Final
          </label>
          <input type="date" name="data_fim" class="control-input" value="<%= locals.filtros ? filtros.data_fim : '' %>">
        </div>
        
        <div class="control-actions">
          <button type="submit" class="btn-control btn-primary">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <circle cx="11" cy="11" r="8"></circle>
              <path d="m21 21-4.35-4.35"></path>
            </svg>
            Filtrar
          </button>
        </div>
      </div>
    </form>
  </div>

  <!-- RECEIVABLES TABLE -->
  <div class="receivables-section">
    <div class="section-header">
      <div class="section-title">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M3 3h18v18H3zM9 9h6v6H9z"></path>
        </svg>
        Contas a Receber Pendentes
      </div>
      <div class="section-info">
        <span class="record-count"><%= contas ? contas.length : 0 %> conta(s) listada(s)</span>
      </div>
    </div>

    <div class="table-container">
      <table class="receivables-table">
        <thead>
          <tr>
            <th class="th-client">Cliente</th>
            <th class="th-product">Produto/Serviço</th>
            <th class="th-due">Vencimento</th>
            <th class="th-installment">Parcela</th>
            <th class="th-amount">Valor</th>
            <th class="th-status">Status</th>
            <th class="th-actions">Ações</th>
          </tr>
        </thead>
        <tbody>
          <% if (contas && contas.length > 0) { %>
            <% contas.forEach(conta => { %>
              <tr class="receivable-row">
                <td class="td-client">
                  <div class="client-info">
                    <span class="client-name"><%= conta.cliente_nome %></span>
                  </div>
                </td>
                <td class="td-product">
                  <span class="product-description"><%= conta.produto_descricao || conta.descricao || '-' %></span>
                </td>
                <td class="td-due">
                  <span class="due-date">
                    <%= new Date(conta.data_vencimento).toLocaleDateString('pt-BR', { timeZone: 'UTC' }) %>
                  </span>
                </td>
                <td class="td-installment">
                  <span class="installment-info">
                    <span class="installment-current"><%= conta.numero_parcela %></span>
                    <span class="installment-separator">/</span>
                    <span class="installment-total"><%= conta.total_parcelas %></span>
                  </span>
                </td>
                <td class="td-amount">
                  <span class="amount-value">
                    R$ <%= parseFloat(conta.valor).toLocaleString('pt-BR', { minimumFractionDigits: 2 }) %>
                  </span>
                </td>
                <td class="td-status">
                  <% if (conta.status === 'Pago') { %>
                    <span class="status-badge status-paid">
                      <svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <polyline points="20,6 9,17 4,12"></polyline>
                      </svg>
                      Recebido
                    </span>
                  <% } else { %>
                    <span class="status-badge status-pending">
                      <svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <circle cx="12" cy="12" r="10"></circle>
                        <polyline points="12,6 12,12 16,14"></polyline>
                      </svg>
                      Pendente
                    </span>
                  <% } %>
                </td>
                <td class="td-actions">
                  <div class="action-buttons">
                    <% if (conta.status !== 'Pago') { %>
                      <!-- BOTÃO COM DATA ATTRIBUTES - SOLUÇÃO MAIS SEGURA -->
                      <button type="button" 
                              class="btn-action btn-success btn-receber-conta" 
                              data-id="<%= conta.id %>"
                              data-cliente="<%= conta.cliente_nome || '' %>"
                              data-valor="<%= conta.valor %>"
                              data-parcela="<%= conta.numero_parcela %>"
                              data-total="<%= conta.total_parcelas %>"
                              title="Registrar recebimento">
                        <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                          <path d="M12 2v20M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"/>
                        </svg>
                        Receber
                      </button>

                      <% if (!conta.movimentacao_id) { %>
                        <form action="/contas-a-receber/delete/<%= conta.id %>" method="POST" style="display: inline;" 
                              onsubmit="return confirm('Confirma a exclusão desta conta manual?');">
                          <button type="submit" class="btn-action btn-danger" title="Excluir conta">
                            <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                              <polyline points="3,6 5,6 21,6"></polyline>
                              <path d="m19,6v14a2,2,0,0,1-2,2H7a2,2,0,0,1-2-2V6m3,0V4a2,2,0,0,1,2-2h4a2,2,0,0,1,2,2v2"></path>
                            </svg>
                            Excluir
                          </button>
                        </form>
                      <% } %>
                    <% } else { %>
                      <span class="no-actions">-</span>
                    <% } %>
                  </div>
                </td>
              </tr>
            <% }) %>
          <% } else { %>
            <tr>
              <td colspan="7" class="empty-state">
                <div class="empty-content">
                  <svg width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1">
                    <circle cx="12" cy="12" r="10"></circle>
                    <line x1="12" y1="8" x2="12" y2="12"></line>
                    <line x1="12" y1="16" x2="12.01" y2="16"></line>
                  </svg>
                  <span>Nenhuma conta a receber encontrada</span>
                </div>
              </td>
            </tr>
          <% } %>
        </tbody>
        <tfoot>
          <tr class="total-row">
            <td colspan="4" class="total-label">Total do Período:</td>
            <td class="total-value">
              R$ <%= (totalValor || 0).toLocaleString('pt-BR', {minimumFractionDigits: 2}) %>
            </td>
            <td colspan="2"></td>
          </tr>
          <tr class="total-pending-row">
            <td colspan="4" class="total-pending-label">Total Pendente:</td>
            <td class="total-pending-value">
              R$ <%= (totalPendente || 0).toLocaleString('pt-BR', {minimumFractionDigits: 2}) %>
            </td>
            <td colspan="2"></td>
          </tr>
        </tfoot>
      </table>
    </div>
  </div>
</div>

<!-- NEW ACCOUNT MODAL -->
<div class="modal-overlay" id="modalNovaConta">
  <div class="modal-container">
    <div class="modal-header">
      <h3 class="modal-title">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <line x1="12" y1="5" x2="12" y2="19"></line>
          <line x1="5" y1="12" x2="19" y2="12"></line>
        </svg>
        Nova Conta a Receber
      </h3>
      <button type="button" class="modal-close" onclick="fecharModalConta()">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <line x1="18" y1="6" x2="6" y2="18"></line>
          <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
      </button>
    </div>
    
    <form action="/contas-a-receber" method="POST">
      <div class="modal-body">
        <div class="form-row">
          <div class="form-field">
            <label class="field-label">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
                <circle cx="12" cy="7" r="4"></circle>
              </svg>
              Cliente
            </label>
            <select class="field-input" name="cliente_nome" required>
              <option value="">Selecione um cliente...</option>
              <% clientes.forEach(cliente => { %>
                <option value="<%= cliente.nome %>"><%= cliente.nome %></option>
              <% }) %>
            </select>
            <div class="field-hint">
              <a href="/clientes" target="_blank" class="hint-link">Cadastrar novo cliente</a>
            </div>
          </div>
          
          <div class="form-field">
            <label class="field-label">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M12 2v20M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"/>
              </svg>
              Valor (R$)
            </label>
            <input type="number" class="field-input" name="valor" step="0.01" min="0.01" placeholder="0,00" required>
          </div>
        </div>

        <div class="form-row">
          <div class="form-field">
            <label class="field-label">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                <line x1="16" y1="2" x2="16" y2="6"></line>
                <line x1="8" y1="2" x2="8" y2="6"></line>
                <line x1="3" y1="10" x2="21" y2="10"></line>
              </svg>
              Data de Vencimento
            </label>
            <input type="date" class="field-input" name="data_vencimento" required>
          </div>
          
          <div class="form-field">
            <label class="field-label">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"></path>
                <rect x="8" y="2" width="8" height="4" rx="1" ry="1"></rect>
              </svg>
              Categoria
            </label>
            <select class="field-input" name="categoria_id" required>
              <option value="">Selecione uma categoria...</option>
              <% categorias.forEach(categoria => { %>
                <option value="<%= categoria.id %>"><%= categoria.nome %></option>
              <% }) %>
            </select>
          </div>
        </div>

        <div class="form-field full-width">
          <label class="field-label">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
              <polyline points="14,2 14,8 20,8"></polyline>
              <line x1="16" y1="13" x2="8" y2="13"></line>
              <line x1="16" y1="17" x2="8" y2="17"></line>
            </svg>
            Descrição
          </label>
          <input type="text" class="field-input" name="descricao" placeholder="Descrição opcional do serviço ou produto...">
        </div>
      </div>
      
      <div class="modal-footer">
        <button type="button" class="btn-modal btn-secondary" onclick="fecharModalConta()">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <line x1="18" y1="6" x2="6" y2="18"></line>
            <line x1="6" y1="6" x2="18" y2="18"></line>
          </svg>
          Cancelar
        </button>
        <button type="submit" class="btn-modal btn-primary">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"></path>
            <polyline points="17,21 17,13 7,13 7,21"></polyline>
            <polyline points="7,3 7,8 15,8"></polyline>
          </svg>
          Criar Conta
        </button>
      </div>
    </form>
  </div>
</div>

<!-- MODAL DE RECEBIMENTO COM DATA -->
<div class="modal-overlay" id="modalRecebimento">
  <div class="modal-container" style="max-width: 500px;">
    <div class="modal-header">
      <h3 class="modal-title">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M12 2v20M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"/>
        </svg>
        Registrar Recebimento
      </h3>
      <button type="button" class="modal-close" onclick="fecharModalRecebimento()">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <line x1="18" y1="6" x2="6" y2="18"></line>
          <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
      </button>
    </div>
    
    <form id="formRecebimento" method="POST" action="">
      <div class="modal-body">
        <div class="payment-info-box">
          <div class="info-row">
            <span class="info-label">Cliente:</span>
            <span id="receber-cliente" class="info-value"></span>
          </div>
          <div class="info-row">
            <span class="info-label">Parcela:</span>
            <span id="receber-parcela" class="info-value"></span>
          </div>
          <div class="info-row">
            <span class="info-label">Valor:</span>
            <span id="receber-valor" class="info-value highlight-amount"></span>
          </div>
        </div>
        
        <div class="form-field">
          <label class="field-label">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
              <line x1="16" y1="2" x2="16" y2="6"></line>
              <line x1="8" y1="2" x2="8" y2="6"></line>
              <line x1="3" y1="10" x2="21" y2="10"></line>
            </svg>
            Data do Recebimento
          </label>
          <input type="date" 
                 name="data_recebimento" 
                 id="data_recebimento" 
                 class="field-input" 
                 required
                 max="<%= new Date().toISOString().split('T')[0] %>"
                 value="<%= new Date().toISOString().split('T')[0] %>">
          <small class="field-helper">Informe a data em que o pagamento foi recebido</small>
        </div>
      </div>
      
      <div class="modal-footer">
        <button type="button" class="btn-modal btn-secondary" onclick="fecharModalRecebimento()">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <line x1="18" y1="6" x2="6" y2="18"></line>
            <line x1="6" y1="6" x2="18" y2="18"></line>
          </svg>
          Cancelar
        </button>
        <button type="submit" class="btn-modal btn-primary btn-confirm-receive">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <polyline points="20 6 9 17 4 12"></polyline>
          </svg>
          Confirmar Recebimento
        </button>
      </div>
    </form>
  </div>
</div>

<style>
/* ENTERPRISE RECEIVABLES DESIGN SYSTEM */
:root {
  --primary-color: #1e40af;
  --primary-hover: #1d4ed8;
  --secondary-color: #6b7280;
  --success-color: #059669;
  --warning-color: #d97706;
  --danger-color: #dc2626;
  --info-color: #0891b2;
  --surface-color: #ffffff;
  --background-color: #f8fafc;
  --border-color: #e5e7eb;
  --text-primary: #111827;
  --text-secondary: #6b7280;
  --text-muted: #9ca3af;
  --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
  --radius-sm: 6px;
  --radius-md: 8px;
  --radius-lg: 12px;
}

/* WORKSPACE LAYOUT */
.receivables-workspace {
  max-width: 1400px;
  margin: 0 auto;
  padding: 32px;
  background: var(--background-color);
  min-height: calc(100vh - 120px);
}

/* EXECUTIVE HEADER */
.executive-header {
  background: var(--surface-color);
  border-radius: var(--radius-lg);
  padding: 32px;
  margin-bottom: 24px;
  box-shadow: var(--shadow-sm);
  border: 1px solid var(--border-color);
}

.header-content {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 24px;
}

.title-section {
  flex: 1;
}

.executive-title {
  font-size: 32px;
  font-weight: 700;
  color: var(--text-primary);
  margin-bottom: 8px;
  display: flex;
  align-items: center;
  gap: 16px;
}

.title-icon {
  color: var(--primary-color);
  flex-shrink: 0;
}

.executive-subtitle {
  font-size: 16px;
  color: var(--text-secondary);
  line-height: 1.5;
}

.header-actions {
  display: flex;
  gap: 12px;
}

/* BUTTONS */
.btn-executive {
  display: inline-flex;
  align-items: center;
  gap: 8px;
  padding: 12px 24px;
  border: none;
  border-radius: var(--radius-md);
  font-size: 14px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
  text-decoration: none;
  white-space: nowrap;
}

.btn-primary {
  background: var(--primary-color);
  color: white;
}

.btn-primary:hover {
  background: var(--primary-hover);
  transform: translateY(-1px);
  box-shadow: var(--shadow-md);
}

/* INFO BANNER */
.info-banner {
  background: #eff6ff;
  border: 1px solid #bfdbfe;
  border-radius: var(--radius-md);
  padding: 16px 20px;
  margin-bottom: 24px;
  display: flex;
  align-items: flex-start;
  gap: 12px;
}

.banner-icon {
  color: var(--info-color);
  flex-shrink: 0;
  margin-top: 2px;
}

.banner-content {
  font-size: 14px;
  color: #1e40af;
  line-height: 1.5;
}

.banner-link {
  color: var(--primary-color);
  font-weight: 600;
  text-decoration: none;
}

.banner-link:hover {
  text-decoration: underline;
}

/* CONTROLS PANEL */
.controls-panel {
  background: var(--surface-color);
  border-radius: var(--radius-lg);
  padding: 24px;
  margin-bottom: 32px;
  box-shadow: var(--shadow-sm);
  border: 1px solid var(--border-color);
}

.controls-header {
  margin-bottom: 20px;
}

.controls-title {
  font-size: 18px;
  font-weight: 600;
  color: var(--text-primary);
  display: flex;
  align-items: center;
  gap: 10px;
}

.controls-content {
  display: flex;
  align-items: end;
  gap: 20px;
  flex-wrap: wrap;
}

.control-group {
  display: flex;
  flex-direction: column;
  gap: 6px;
  min-width: 180px;
}

.control-label {
  font-size: 14px;
  font-weight: 500;
  color: var(--text-primary);
  display: flex;
  align-items: center;
  gap: 6px;
}

.control-input {
  padding: 10px 12px;
  border: 1px solid var(--border-color);
  border-radius: var(--radius-sm);
  font-size: 14px;
  background: var(--surface-color);
  color: var(--text-primary);
  transition: border-color 0.2s ease;
}

.control-input:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 3px rgba(30, 64, 175, 0.1);
}

.control-actions {
  display: flex;
  gap: 8px;
}

.btn-control {
  display: inline-flex;
  align-items: center;
  gap: 6px;
  padding: 10px 16px;
  border: none;
  border-radius: var(--radius-sm);
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
}

/* RECEIVABLES SECTION */
.receivables-section {
  background: var(--surface-color);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-sm);
  border: 1px solid var(--border-color);
  overflow: hidden;
}

.section-header {
  padding: 24px;
  border-bottom: 1px solid var(--border-color);
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: #f8fafc;
}

.section-title {
  font-size: 20px;
  font-weight: 600;
  color: var(--text-primary);
  display: flex;
  align-items: center;
  gap: 12px;
}

.section-info {
  display: flex;
  align-items: center;
  gap: 16px;
}

.record-count {
  font-size: 14px;
  color: var(--text-secondary);
}

.table-container {
  overflow-x: auto;
}

.receivables-table {
  width: 100%;
  border-collapse: collapse;
}

.receivables-table th {
  background: #f8fafc;
  padding: 16px;
  text-align: left;
  font-size: 12px;
  font-weight: 600;
  color: var(--text-secondary);
  text-transform: uppercase;
  letter-spacing: 0.5px;
  border-bottom: 1px solid var(--border-color);
  white-space: nowrap;
}

.receivables-table td {
  padding: 16px;
  border-bottom: 1px solid #f1f5f9;
  vertical-align: middle;
}

.receivable-row:hover {
  background: #f8fafc;
}

/* TABLE CELLS */
.td-client {
  min-width: 150px;
}

.client-info {
  display: flex;
  flex-direction: column;
  gap: 2px;
}

.client-name {
  font-weight: 500;
  color: var(--text-primary);
}

.td-product {
  min-width: 200px;
}

.product-description {
  color: var(--text-secondary);
  font-size: 14px;
}

.td-due {
  min-width: 120px;
}

.due-date {
  font-family: 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace;
  font-size: 14px;
  color: var(--text-primary);
}

.td-installment {
  min-width: 80px;
  text-align: center;
}

.installment-info {
  display: inline-flex;
  align-items: center;
  gap: 2px;
  font-family: 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace;
  font-weight: 600;
}

.installment-current {
  color: var(--primary-color);
}

.installment-separator {
  color: var(--text-muted);
}

.installment-total {
  color: var(--text-secondary);
}

.td-amount {
  min-width: 120px;
  text-align: right;
}

.amount-value {
  font-size: 16px;
  font-weight: 600;
  color: var(--text-primary);
  font-family: 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace;
}

.td-status {
  min-width: 100px;
}

.status-badge {
  display: inline-flex;
  align-items: center;
  gap: 6px;
  padding: 6px 12px;
  border-radius: var(--radius-sm);
  font-size: 12px;
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.status-paid {
  background: #dcfce7;
  color: #166534;
}

.status-pending {
  background: #fef3c7;
  color: #92400e;
}

.td-actions {
  min-width: 140px;
}

.action-buttons {
  display: flex;
  gap: 6px;
  justify-content: flex-end;
}

.btn-action {
  display: inline-flex;
  align-items: center;
  gap: 4px;
  padding: 6px 10px;
  border: none;
  border-radius: var(--radius-sm);
  font-size: 12px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  text-decoration: none;
  white-space: nowrap;
}

.btn-success {
  background: #dcfce7;
  color: #166534;
}

.btn-success:hover {
  background: #bbf7d0;
  color: #14532d;
}

.btn-danger {
  background: #fef2f2;
  color: #991b1b;
}

.btn-danger:hover {
  background: #fecaca;
  color: #7f1d1d;
}

.no-actions {
  color: var(--text-muted);
  font-size: 14px;
}

/* TABLE FOOTER */
.total-row {
  background: #f8fafc;
  font-weight: 600;
  border-top: 2px solid var(--border-color);
}

.total-pending-row {
  background: #fffbeb;
  font-weight: 600;
  color: var(--warning-color);
}

.total-label,
.total-pending-label {
  text-align: right;
  color: var(--text-primary);
}

.total-value,
.total-pending-value {
  text-align: right;
  font-family: 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace;
  font-size: 16px;
}

.empty-state {
  text-align: center;
  padding: 64px 32px;
}

.empty-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 16px;
  color: var(--text-muted);
}

/* MODAL */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: none;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  padding: 20px;
}

.modal-overlay.active {
  display: flex;
}

.modal-container {
  background: var(--surface-color);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-lg);
  width: 100%;
  max-width: 600px;
  max-height: 90vh;
  overflow: hidden;
}

.modal-header {
  padding: 24px;
  border-bottom: 1px solid var(--border-color);
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: #f8fafc;
}

.modal-title {
  font-size: 20px;
  font-weight: 600;
  color: var(--text-primary);
  display: flex;
  align-items: center;
  gap: 12px;
}

.modal-close {
  background: none;
  border: none;
  color: var(--text-secondary);
  cursor: pointer;
  padding: 4px;
  border-radius: var(--radius-sm);
  transition: all 0.2s ease;
}

.modal-close:hover {
  background: #e5e7eb;
  color: var(--text-primary);
}

.modal-body {
  padding: 24px;
  max-height: calc(90vh - 180px);
  overflow-y: auto;
}

.form-row {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 20px;
  margin-bottom: 20px;
}

.form-field {
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.form-field.full-width {
  grid-column: 1 / -1;
}

.field-label {
  font-size: 14px;
  font-weight: 500;
  color: var(--text-primary);
  display: flex;
  align-items: center;
  gap: 6px;
}

.field-input {
  padding: 12px;
  border: 1px solid var(--border-color);
  border-radius: var(--radius-sm);
  font-size: 14px;
  transition: border-color 0.2s ease;
}

.field-input:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 3px rgba(30, 64, 175, 0.1);
}

.field-hint {
  margin-top: 4px;
}

.hint-link {
  font-size: 12px;
  color: var(--primary-color);
  text-decoration: none;
}

.hint-link:hover {
  text-decoration: underline;
}

.modal-footer {
  padding: 20px 24px;
  border-top: 1px solid var(--border-color);
  display: flex;
  justify-content: flex-end;
  gap: 12px;
  background: #f8fafc;
}

.btn-modal {
  display: inline-flex;
  align-items: center;
  gap: 8px;
  padding: 10px 20px;
  border: none;
  border-radius: var(--radius-sm);
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
}

.btn-secondary {
  background: #f3f4f6;
  color: var(--text-secondary);
  border: 1px solid var(--border-color);
}

.btn-secondary:hover {
  background: #e5e7eb;
  color: var(--text-primary);
}

/* Estilos para info box do recebimento */
.payment-info-box {
  background: #f8fafc;
  border: 1px solid #e5e7eb;
  border-radius: 8px;
  padding: 16px;
  margin-bottom: 20px;
}

.info-row {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 8px 0;
  border-bottom: 1px solid #e5e7eb;
}

.info-row:last-child {
  border-bottom: none;
}

.info-label {
  font-size: 14px;
  color: #6b7280;
  font-weight: 500;
}

.info-value {
  font-size: 14px;
  color: #111827;
  font-weight: 600;
}

.highlight-amount {
  color: #059669;
  font-size: 16px;
}

.field-helper {
  display: block;
  margin-top: 4px;
  font-size: 12px;
  color: #6b7280;
}

.btn-confirm-receive {
  background: var(--success-color);
  color: white;
}

.btn-confirm-receive:hover {
  background: #047857;
}

/* RESPONSIVE DESIGN */
@media (max-width: 1024px) {
  .receivables-workspace {
    padding: 20px;
  }
  
  .controls-content {
    flex-direction: column;
    align-items: stretch;
  }
  
  .control-group {
    min-width: auto;
  }
}

@media (max-width: 768px) {
  .receivables-workspace {
    padding: 16px;
  }
  
  .header-content {
    flex-direction: column;
    gap: 16px;
    text-align: center;
  }
  
  .executive-title {
    font-size: 24px;
  }
  
  .form-row {
    grid-template-columns: 1fr;
  }
  
  .section-header {
    flex-direction: column;
    gap: 12px;
    text-align: center;
  }
  
  .receivables-table {
    font-size: 14px;
  }
  
  .receivables-table th,
  .receivables-table td {
    padding: 12px 8px;
  }
  
  .action-buttons {
    flex-direction: column;
    gap: 4px;
  }
  
  .btn-action {
    justify-content: center;
  }
}
</style>

<script>
// RECEIVABLES MANAGEMENT FUNCTIONS

// Event listener para botões de receber (usando data attributes)
document.addEventListener('DOMContentLoaded', function() {
  // Handler para botões de receber conta
  document.addEventListener('click', function(e) {
    if (e.target.closest('.btn-receber-conta')) {
      const btn = e.target.closest('.btn-receber-conta');
      const contaId = btn.dataset.id;
      const clienteNome = btn.dataset.cliente;
      const valor = parseFloat(btn.dataset.valor);
      const parcela = parseInt(btn.dataset.parcela);
      const totalParcelas = parseInt(btn.dataset.total);
      
      abrirModalRecebimento(contaId, clienteNome, valor, parcela, totalParcelas);
    }
  });
});

// Função para abrir modal de nova conta
function abrirModalConta() {
  document.getElementById('modalNovaConta').classList.add('active');
  document.body.style.overflow = 'hidden';
  setTimeout(() => {
    document.querySelector('select[name="cliente_nome"]').focus();
  }, 100);
}

// Função para fechar modal de nova conta
function fecharModalConta() {
  document.getElementById('modalNovaConta').classList.remove('active');
  document.body.style.overflow = 'auto';
}

// Função para abrir modal de recebimento com seleção de data
function abrirModalRecebimento(contaId, clienteNome, valor, parcela, totalParcelas) {
  const modal = document.getElementById('modalRecebimento');
  const form = document.getElementById('formRecebimento');
  
  // Atualizar informações no modal
  document.getElementById('receber-cliente').textContent = clienteNome || 'Não informado';
  document.getElementById('receber-parcela').textContent = `${parcela}/${totalParcelas}`;
  document.getElementById('receber-valor').textContent = `R$ ${parseFloat(valor).toLocaleString('pt-BR', {minimumFractionDigits: 2})}`;
  
  // Atualizar action do formulário - ROTA ATUALIZADA
  form.action = `/contas-a-receber/receber/${contaId}`;
  
  // Definir data padrão como hoje
  document.getElementById('data_recebimento').value = new Date().toISOString().split('T')[0];
  
  // Mostrar modal
  modal.classList.add('active');
  document.body.style.overflow = 'hidden';
  
  // Focar no campo de data
  setTimeout(() => {
    document.getElementById('data_recebimento').focus();
  }, 100);
}

// Função para fechar modal de recebimento
function fecharModalRecebimento() {
  const modal = document.getElementById('modalRecebimento');
  modal.classList.remove('active');
  document.body.style.overflow = 'auto';
  
  // Limpar formulário
  document.getElementById('formRecebimento').reset();
}

// Close modal on overlay click - Nova Conta
document.getElementById('modalNovaConta').addEventListener('click', function(e) {
  if (e.target === this) {
    fecharModalConta();
  }
});

// Close modal on overlay click - Recebimento
document.getElementById('modalRecebimento').addEventListener('click', function(e) {
  if (e.target === this) {
    fecharModalRecebimento();
  }
});

// Form validation - Nova Conta
document.querySelector('#modalNovaConta form').addEventListener('submit', function(e) {
  const cliente = document.querySelector('select[name="cliente_nome"]').value;
  const valor = document.querySelector('input[name="valor"]').value;
  const vencimento = document.querySelector('input[name="data_vencimento"]').value;
  const categoria = document.querySelector('select[name="categoria_id"]').value;
  
  if (!cliente || !valor || !vencimento || !categoria) {
    e.preventDefault();
    alert('Por favor, preencha todos os campos obrigatórios.');
  }
});

// Adicionar validação de data para recebimento
document.getElementById('formRecebimento').addEventListener('submit', function(e) {
  const dataRecebimento = document.getElementById('data_recebimento').value;
  
  if (!dataRecebimento) {
    e.preventDefault();
    alert('Por favor, selecione a data do recebimento.');
    return false;
  }
  
  // Validar que a data não seja futura
  const hoje = new Date().toISOString().split('T')[0];
  if (dataRecebimento > hoje) {
    e.preventDefault();
    alert('A data de recebimento não pode ser futura.');
    return false;
  }
});

// Set default due date to 30 days from today
document.addEventListener('DOMContentLoaded', function() {
  const hoje = new Date();
  const vencimento = new Date(hoje.getTime() + (30 * 24 * 60 * 60 * 1000));
  const vencimentoFormatado = vencimento.toISOString().split('T')[0];
  
  const campoVencimento = document.querySelector('input[name="data_vencimento"]');
  if (campoVencimento && !campoVencimento.value) {
    campoVencimento.value = vencimentoFormatado;
  }
});

// Escape key handler
document.addEventListener('keydown', function(e) {
  if (e.key === 'Escape') {
    if (document.getElementById('modalRecebimento').classList.contains('active')) {
      fecharModalRecebimento();
    }
    if (document.getElementById('modalNovaConta').classList.contains('active')) {
      fecharModalConta();
    }
  }
});
</script>

<%- include('partials/footer') %>