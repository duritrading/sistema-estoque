<%- include('partials/header', {
  titulo: 'Dashboard',
  subtitulo: 'Vis√£o geral do seu neg√≥cio',
  user: locals.user
}) %>

<!-- Indicadores Principais -->
<div class="metrics-grid">
  <div class="metric-card <%= variacaoFaturamento >= 0 ? 'positive' : 'negative' %>">
    <div class="metric-header">
      <h3>üí∞ Faturamento do M√™s</h3>
      <span class="variation <%= variacaoFaturamento >= 0 ? 'up' : 'down' %>">
        <%= variacaoFaturamento >= 0 ? '‚Üë' : '‚Üì' %> <%= Math.abs(variacaoFaturamento) %>%
      </span>
    </div>
    <p class="metric-value">R$ <%= faturamentoMes.toLocaleString('pt-BR', {minimumFractionDigits: 2}) %></p>
    <p class="metric-compare">M√™s passado: R$ <%= faturamentoMesPassado.toLocaleString('pt-BR', {minimumFractionDigits: 2}) %></p>
  </div>

  <div class="metric-card">
    <div class="metric-header">
      <h3>üìä Lucro do M√™s</h3>
    </div>
    <p class="metric-value">R$ <%= lucroMes.toLocaleString('pt-BR', {minimumFractionDigits: 2}) %></p>
    <p class="metric-compare">Margem: <%= faturamentoMes > 0 ? ((lucroMes/faturamentoMes)*100).toFixed(1) : 0 %>%</p>
  </div>

  <div class="metric-card <%= fluxoCaixa.saldo >= 0 ? 'positive' : 'negative' %>">
    <div class="metric-header">
      <h3>üí∏ Fluxo de Caixa</h3>
    </div>
    <p class="metric-value">R$ <%= fluxoCaixa.saldo.toLocaleString('pt-BR', {minimumFractionDigits: 2}) %></p>
    <p class="metric-compare">‚Üì <%= fluxoCaixa.entradas.toLocaleString('pt-BR', {minimumFractionDigits: 2}) %> | ‚Üë <%= fluxoCaixa.saidas.toLocaleString('pt-BR', {minimumFractionDigits: 2}) %></p>
  </div>

  <div class="metric-card <%= contasVencidas.quantidade > 0 ? 'alert' : '' %>">
    <div class="metric-header">
      <h3>‚ö†Ô∏è Contas Vencidas</h3>
    </div>
    <p class="metric-value">R$ <%= contasVencidas.total.toLocaleString('pt-BR', {minimumFractionDigits: 2}) %></p>
    <p class="metric-compare"><%= contasVencidas.quantidade %> parcela<%= contasVencidas.quantidade !== 1 ? 's' : '' %> em atraso</p>
  </div>
</div>

<!-- Alertas Importantes -->
<% if (alertasContas.length > 0 || produtosCriticos.length > 0) { %>
<div class="alerts-section">
  <h2>üö® Aten√ß√£o Imediata</h2>
  <div class="alerts-grid">
    <% if (alertasContas.length > 0) { %>
    <div class="alert-card danger">
      <h3>Contas vencidas h√° mais de 7 dias</h3>
      <% alertasContas.forEach(conta => { %>
        <div class="alert-item">
          <strong><%= conta.cliente_nome %></strong>
          <span>R$ <%= parseFloat(conta.valor).toFixed(2) %> - <%= conta.dias_atraso %> dias</span>
        </div>
      <% }) %>
      <a href="/inadimplencia" class="alert-link">Ver todas ‚Üí</a>
    </div>
    <% } %>

    <% if (produtosCriticos.length > 0) { %>
    <div class="alert-card warning">
      <h3>Produtos com estoque cr√≠tico</h3>
      <% produtosCriticos.slice(0, 5).forEach(produto => { %>
        <div class="alert-item">
          <strong><%= produto.nome %></strong>
          <span><%= produto.quantidade_estoque %>/<%= produto.estoque_minimo %> un</span>
        </div>
      <% }) %>
      <a href="/produtos" class="alert-link">Gerenciar estoque ‚Üí</a>
    </div>
    <% } %>
  </div>
</div>
<% } %>

<div class="dashboard-grid">
  <!-- Vendas dos √öltimos 7 Dias -->
  <div class="card">
    <h2>üìà Vendas dos √öltimos 7 Dias</h2>
    <canvas id="vendasChart"></canvas>
  </div>

  <!-- Top 5 Produtos -->
  <div class="card">
    <h2>üèÜ Top 5 Produtos do M√™s</h2>
    <% if (topProdutos.length > 0) { %>
      <div class="top-products">
        <% topProdutos.forEach((produto, index) => { %>
          <div class="product-item">
            <div class="rank">#<%= index + 1 %></div>
            <div class="product-info">
              <strong><%= produto.nome %></strong>
              <span><%= produto.quantidade_vendida %> un - R$ <%= parseFloat(produto.valor_total).toFixed(2) %></span>
            </div>
          </div>
        <% }) %>
      </div>
    <% } else { %>
      <p>Nenhuma venda registrada este m√™s</p>
    <% } %>
  </div>
</div>

<!-- Gest√£o de Estoque -->
<div class="dashboard-grid">
  <div class="card">
    <h2>üì¶ Resumo do Estoque</h2>
    <div class="stock-summary">
      <div class="stock-item">
        <span>Valor em Custo</span>
        <strong>R$ <%= valorEstoque.custo.toLocaleString('pt-BR', {minimumFractionDigits: 2}) %></strong>
      </div>
      <div class="stock-item">
        <span>Valor de Venda</span>
        <strong>R$ <%= valorEstoque.venda.toLocaleString('pt-BR', {minimumFractionDigits: 2}) %></strong>
      </div>
      <div class="stock-item">
        <span>Total de Produtos</span>
        <strong><%= valorEstoque.totalProdutos %></strong>
      </div>
      <div class="stock-item alert">
        <span>Produtos Zerados</span>
        <strong><%= valorEstoque.produtosZerados %></strong>
      </div>
    </div>
  </div>

  <div class="card">
    <h2>üíÄ Produtos Parados (30+ dias)</h2>
    <% if (produtosParados.length > 0) { %>
      <div class="stopped-products">
        <% produtosParados.forEach(produto => { %>
          <div class="product-item">
            <div class="product-info">
              <strong><%= produto.nome %></strong>
              <span><%= produto.quantidade_estoque %> un - R$ <%= parseFloat(produto.valor_parado).toFixed(2) %> parado</span>
              <small>√öltima venda: <%= produto.ultima_venda ? new Date(produto.ultima_venda).toLocaleDateString('pt-BR') : 'Nunca vendido' %></small>
            </div>
          </div>
        <% }) %>
      </div>
    <% } else { %>
      <p>‚úÖ Todos os produtos t√™m boa rotatividade!</p>
    <% } %>
  </div>
</div>

<style>
/* Grid de m√©tricas principais */
.metrics-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 20px;
  margin-bottom: 30px;
}

.metric-card {
  background: white;
  padding: 20px;
  border-radius: 10px;
  box-shadow: 0 2px 10px rgba(0,0,0,0.1);
  border-left: 4px solid #ddd;
  transition: transform 0.2s;
}

.metric-card:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 20px rgba(0,0,0,0.15);
}

.metric-card.positive {
  border-left-color: #28a745;
}

.metric-card.negative {
  border-left-color: #dc3545;
}

.metric-card.alert {
  border-left-color: #ffc107;
}

.metric-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 10px;
}

.metric-header h3 {
  margin: 0;
  font-size: 16px;
  color: #666;
}

.variation {
  font-size: 14px;
  font-weight: bold;
  padding: 2px 8px;
  border-radius: 12px;
}

.variation.up {
  color: #28a745;
  background: #d4edda;
}

.variation.down {
  color: #dc3545;
  background: #f8d7da;
}

.metric-value {
  font-size: 32px;
  font-weight: bold;
  margin: 0;
  color: #333;
}

.metric-compare {
  font-size: 14px;
  color: #999;
  margin: 5px 0 0 0;
}

/* Se√ß√£o de Alertas */
.alerts-section {
  margin-bottom: 30px;
}

.alerts-section h2 {
  color: #dc3545;
  margin-bottom: 15px;
}

.alerts-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 20px;
}

.alert-card {
  background: white;
  padding: 20px;
  border-radius: 10px;
  box-shadow: 0 2px 10px rgba(0,0,0,0.1);
  border-left: 4px solid;
}

.alert-card.danger {
  border-left-color: #dc3545;
  background: #f8d7da;
}

.alert-card.warning {
  border-left-color: #ffc107;
  background: #fff3cd;
}

.alert-card h3 {
  margin: 0 0 15px 0;
  font-size: 16px;
  color: #333;
}

.alert-item {
  display: flex;
  justify-content: space-between;
  padding: 8px 0;
  border-bottom: 1px solid rgba(0,0,0,0.1);
}

.alert-item:last-child {
  border-bottom: none;
}

.alert-link {
  display: inline-block;
  margin-top: 10px;
  color: #007bff;
  text-decoration: none;
  font-weight: bold;
}

/* Grid do Dashboard */
.dashboard-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
  gap: 20px;
  margin-bottom: 20px;
}

/* Cards */
.card {
  background: white;
  padding: 25px;
  border-radius: 10px;
  box-shadow: 0 2px 10px rgba(0,0,0,0.1);
}

.card h2 {
  margin: 0 0 20px 0;
  font-size: 20px;
  color: #333;
}

/* Top produtos */
.top-products .product-item {
  display: flex;
  align-items: center;
  padding: 10px 0;
  border-bottom: 1px solid #eee;
}

.product-item:last-child {
  border-bottom: none;
}

.rank {
  font-size: 24px;
  font-weight: bold;
  color: #666;
  margin-right: 15px;
  width: 40px;
}

.product-info {
  flex: 1;
}

.product-info strong {
  display: block;
  margin-bottom: 5px;
}

.product-info span {
  color: #666;
  font-size: 14px;
}

.product-info small {
  display: block;
  color: #999;
  font-size: 12px;
  margin-top: 2px;
}

/* Resumo do estoque */
.stock-summary {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: 15px;
}

.stock-item {
  padding: 15px;
  background: #f8f9fa;
  border-radius: 8px;
  text-align: center;
}

.stock-item.alert {
  background: #fff3cd;
}

.stock-item span {
  display: block;
  color: #666;
  font-size: 14px;
  margin-bottom: 5px;
}

.stock-item strong {
  font-size: 20px;
  color: #333;
}

/* Produtos parados */
.stopped-products .product-item {
  padding: 10px 0;
  border-bottom: 1px solid #eee;
}

@media (max-width: 768px) {
  .dashboard-grid {
    grid-template-columns: 1fr;
  }
  
  .metrics-grid {
    grid-template-columns: 1fr;
  }
}
</style>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
// Gr√°fico de vendas dos √∫ltimos 7 dias
const ctx = document.getElementById('vendasChart').getContext('2d');
const vendasData = <%- JSON.stringify(vendasDiarias) %>;

new Chart(ctx, {
  type: 'line',
  data: {
    labels: vendasData.map(d => new Date(d.dia).toLocaleDateString('pt-BR', {weekday: 'short', day: 'numeric'})),
    datasets: [{
      label: 'Vendas',
      data: vendasData.map(d => parseFloat(d.total)),
      borderColor: '#007bff',
      backgroundColor: 'rgba(0, 123, 255, 0.1)',
      tension: 0.4,
      fill: true
    }]
  },
  options: {
    responsive: true,
    plugins: {
      legend: {
        display: false
      },
      tooltip: {
        callbacks: {
          label: function(context) {
            return 'R$ ' + context.parsed.y.toFixed(2);
          }
        }
      }
    },
    scales: {
      y: {
        beginAtZero: true,
        ticks: {
          callback: function(value) {
            return 'R$ ' + value.toLocaleString('pt-BR');
          }
        }
      }
    }
  }
});
</script>

<%- include('partials/footer') %>