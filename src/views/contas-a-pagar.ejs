<%- include('partials/header', {
  titulo: 'Contas a Pagar',
  subtitulo: 'Gerencie suas despesas e obrigações futuras',
  user: locals.user
}) %>

<!-- ACCOUNTS PAYABLE WORKSPACE - ENTERPRISE DESIGN -->
<div class="payables-workspace">
  
  <!-- EXECUTIVE HEADER -->
  <div class="executive-header">
    <div class="header-content">
      <div class="header-main">
        <div class="title-section">
          <h1 class="executive-title">
            <svg class="title-icon" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
              <polyline points="14,2 14,8 20,8"></polyline>
              <line x1="16" y1="13" x2="8" y2="13"></line>
              <line x1="16" y1="17" x2="8" y2="17"></line>
              <circle cx="10" cy="16" r="2"></circle>
            </svg>
            Contas a Pagar
          </h1>
          <p class="executive-subtitle">
            Gerencie suas despesas e obrigações futuras com controle total
          </p>
        </div>
      </div>
      <div class="header-actions">
        <button type="button" class="btn-executive btn-primary" onclick="abrirModalConta()">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <line x1="12" y1="5" x2="12" y2="19"></line>
            <line x1="5" y1="12" x2="19" y2="12"></line>
          </svg>
          Nova Conta
        </button>
      </div>
    </div>
  </div>

  <!-- INFORMATION ALERT -->
  <div class="info-banner">
    <div class="banner-icon">
      <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <circle cx="12" cy="12" r="10"></circle>
        <line x1="12" y1="16" x2="12" y2="12"></line>
        <line x1="12" y1="8" x2="12.01" y2="8"></line>
      </svg>
    </div>
    <div class="banner-content">
      <strong>Informação importante:</strong> Esta tela exibe as contas a pagar pendentes e já quitadas. 
      Use os filtros para visualizar por período específico e gerencie seus pagamentos de forma eficiente.
    </div>
  </div>

  <!-- FILTER CONTROLS -->
  <div class="controls-panel">
    <div class="controls-header">
      <div class="controls-title">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <polygon points="22,3 2,3 10,12.46 10,19 14,21 14,12.46"></polygon>
        </svg>
        Filtros de Período
      </div>
    </div>
    
    <form method="GET" action="/contas-a-pagar" class="controls-form">
      <div class="controls-content">
        <div class="control-group">
          <label class="control-label">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
              <line x1="16" y1="2" x2="16" y2="6"></line>
              <line x1="8" y1="2" x2="8" y2="6"></line>
              <line x1="3" y1="10" x2="21" y2="10"></line>
            </svg>
            Data Inicial
          </label>
          <input type="date" name="data_inicio" class="control-input" value="<%= locals.filtros ? filtros.data_inicio : '' %>">
        </div>
        
        <div class="control-group">
          <label class="control-label">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
              <line x1="16" y1="2" x2="16" y2="6"></line>
              <line x1="8" y1="2" x2="8" y2="6"></line>
              <line x1="3" y1="10" x2="21" y2="10"></line>
            </svg>
            Data Final
          </label>
          <input type="date" name="data_fim" class="control-input" value="<%= locals.filtros ? filtros.data_fim : '' %>">
        </div>
        
        <div class="control-actions">
          <button type="submit" class="btn-control btn-primary">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <circle cx="11" cy="11" r="8"></circle>
              <path d="m21 21-4.35-4.35"></path>
            </svg>
            Filtrar
          </button>
          
          <a href="/contas-a-pagar" class="btn-control btn-secondary">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <polyline points="1 4 1 10 7 10"></polyline>
              <path d="M3.51 15a9 9 0 1 0 2.13-9.36L1 10"></path>
            </svg>
            Limpar
          </a>
        </div>
      </div>
    </form>
  </div>

  <!-- PAYABLES TABLE -->
  <div class="payables-section">
    <div class="section-header">
      <div class="section-title">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M3 3h18v18H3zM9 9h6v6H9z"></path>
        </svg>
        Contas a Pagar
      </div>
      <div class="section-info">
        <span class="record-count"><%= contas ? contas.length : 0 %> conta(s) listada(s)</span>
      </div>
    </div>

    <div class="table-container">
      <table class="payables-table">
        <thead>
          <tr>
            <th class="th-description">Descrição</th>
            <th class="th-supplier">Fornecedor</th>
            <th class="th-due">Vencimento</th>
            <th class="th-amount">Valor</th>
            <th class="th-status">Status</th>
            <th class="th-category">Categoria</th>
            <th class="th-actions">Ações</th>
          </tr>
        </thead>
        <tbody>
          <% if (contas && contas.length > 0) { %>
            <% contas.forEach(conta => { %>
              <tr class="payable-row">
                <td class="td-description">
                  <div class="description-info">
                    <span class="description-name"><%= conta.descricao %></span>
                  </div>
                </td>
                <td class="td-supplier">
                  <span class="supplier-description"><%= conta.fornecedor_nome || '-' %></span>
                </td>
                <td class="td-due">
                  <% 
                    const dataVencimento = new Date(conta.data_vencimento);
                    const hoje = new Date();
                    const isVencida = dataVencimento < hoje && conta.status === 'Pendente';
                  %>
                  <span class="due-date <%= isVencida ? 'due-overdue' : '' %>">
                    <%= dataVencimento.toLocaleDateString('pt-BR', { timeZone: 'UTC' }) %>
                  </span>
                  <% if (isVencida) { %>
                    <span class="due-indicator">Vencida</span>
                  <% } %>
                </td>
                <td class="td-amount">
                  <span class="amount-value">
                    R$ <%= parseFloat(conta.valor).toLocaleString('pt-BR', { minimumFractionDigits: 2 }) %>
                  </span>
                </td>
                <td class="td-status">
                  <% if (conta.status === 'Pago') { %>
                    <span class="status-badge status-paid">
                      <svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <polyline points="20,6 9,17 4,12"></polyline>
                      </svg>
                      Pago
                    </span>
                  <% } else { %>
                    <span class="status-badge status-pending">
                      <svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <circle cx="12" cy="12" r="10"></circle>
                        <polyline points="12,6 12,12 16,14"></polyline>
                      </svg>
                      Pendente
                    </span>
                  <% } %>
                </td>
                <td class="td-category">
                  <span class="category-description"><%= conta.categoria_nome || 'Sem categoria' %></span>
                </td>
                <td class="td-actions">
                  <div class="action-buttons">
                    <% if (conta.status === 'Pendente') { %>
                      <button 
                        type="button"
                        class="btn-action btn-success btn-pagar-conta" 
                        data-conta-id="<%= conta.id %>"
                        data-descricao="<%= conta.descricao %>"
                        data-fornecedor="<%= conta.fornecedor_nome || 'Não informado' %>"
                        data-valor="<%= conta.valor %>"
                        title="Registrar pagamento"
                      >
                        <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                          <path d="M12 2v20M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"/>
                        </svg>
                        Pagar
                      </button>

                      <form action="/contas-a-pagar/delete/<%= conta.id %>" method="POST" style="display: inline;" 
                            onsubmit="return confirm('Confirma a exclusão desta conta?');">
                        <button type="submit" class="btn-action btn-danger" title="Excluir conta">
                          <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <polyline points="3,6 5,6 21,6"></polyline>
                            <path d="m19,6v14a2,2,0,0,1-2,2H7a2,2,0,0,1-2-2V6m3,0V4a2,2,0,0,1,2-2h4a2,2,0,0,1,2,2v2"></path>
                          </svg>
                          Excluir
                        </button>
                      </form>
                    <% } else { %>
                      <form action="/contas-a-pagar/estornar/<%= conta.id %>" method="POST" style="display: inline;" 
                            onsubmit="return confirm('Confirma o estorno deste pagamento?');">
                        <button type="submit" class="btn-action btn-warning" title="Estornar pagamento">
                          <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <polyline points="1 4 1 10 7 10"></polyline>
                            <path d="M3.51 15a9 9 0 1 0 2.13-9.36L1 10"></path>
                          </svg>
                          Estornar
                        </button>
                      </form>
                    <% } %>
                  </div>
                </td>
              </tr>
            <% }) %>
          <% } else { %>
            <tr>
              <td colspan="7" class="empty-state">
                <div class="empty-content">
                  <svg width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1">
                    <circle cx="12" cy="12" r="10"></circle>
                    <line x1="12" y1="8" x2="12" y2="12"></line>
                    <line x1="12" y1="16" x2="12.01" y2="16"></line>
                  </svg>
                  <span>Nenhuma conta a pagar encontrada</span>
                </div>
              </td>
            </tr>
          <% } %>
        </tbody>
        <tfoot>
          <tr class="total-row">
            <td colspan="3" class="total-label">Total do Período:</td>
            <td class="total-value">
              R$ <%= (totalValor || 0).toLocaleString('pt-BR', {minimumFractionDigits: 2}) %>
            </td>
            <td colspan="3"></td>
          </tr>
          <tr class="total-pending-row">
            <td colspan="3" class="total-pending-label">Total Pendente:</td>
            <td class="total-pending-value">
              R$ <%= (totalPendente || 0).toLocaleString('pt-BR', {minimumFractionDigits: 2}) %>
            </td>
            <td colspan="3"></td>
          </tr>
        </tfoot>
      </table>
    </div>
  </div>
</div>

<!-- NEW ACCOUNT MODAL -->
<div class="modal-overlay" id="modalNovaConta">
  <div class="modal-container">
    <div class="modal-header">
      <h3 class="modal-title">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <line x1="12" y1="5" x2="12" y2="19"></line>
          <line x1="5" y1="12" x2="19" y2="12"></line>
        </svg>
        Nova Conta a Pagar
      </h3>
      <button type="button" class="modal-close" onclick="fecharModalConta()">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <line x1="18" y1="6" x2="6" y2="18"></line>
          <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
      </button>
    </div>
    
    <form action="/contas-a-pagar" method="POST">
      <div class="modal-body">
        <div class="form-row">
          <div class="form-field">
            <label class="field-label">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
                <polyline points="14,2 14,8 20,8"></polyline>
                <line x1="16" y1="13" x2="8" y2="13"></line>
                <line x1="16" y1="17" x2="8" y2="17"></line>
              </svg>
              Descrição
            </label>
            <input type="text" class="field-input" name="descricao" placeholder="Descreva a despesa ou obrigação..." required>
          </div>
          
          <div class="form-field">
            <label class="field-label">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path>
                <circle cx="12" cy="7" r="4"></circle>
              </svg>
              Fornecedor
            </label>
            <select class="field-input" name="fornecedor_id">
              <option value="">Selecione um fornecedor...</option>
              <% fornecedores.forEach(fornecedor => { %>
                <option value="<%= fornecedor.id %>"><%= fornecedor.nome %></option>
              <% }) %>
            </select>
            <div class="field-hint">
              <a href="/fornecedores" target="_blank" class="hint-link">Cadastrar novo fornecedor</a>
            </div>
          </div>
        </div>

        <div class="form-row">
          <div class="form-field">
            <label class="field-label">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M12 2v20M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"/>
              </svg>
              Valor (R$)
            </label>
            <input type="number" class="field-input" name="valor" step="0.01" min="0.01" placeholder="0,00" required>
          </div>
          
          <div class="form-field">
            <label class="field-label">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                <line x1="16" y1="2" x2="16" y2="6"></line>
                <line x1="8" y1="2" x2="8" y2="6"></line>
                <line x1="3" y1="10" x2="21" y2="10"></line>
              </svg>
              Data de Vencimento
            </label>
            <input type="date" class="field-input" name="data_vencimento" required>
          </div>
        </div>

        <div class="form-field full-width">
          <label class="field-label">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"></path>
              <rect x="8" y="2" width="8" height="4" rx="1" ry="1"></rect>
            </svg>
            Categoria
          </label>
          <select class="field-input" name="categoria_id" required>
            <option value="">Selecione uma categoria...</option>
            <% categorias.forEach(categoria => { %>
              <option value="<%= categoria.id %>"><%= categoria.nome %></option>
            <% }) %>
          </select>
        </div>
      </div>
      
      <div class="modal-footer">
        <button type="button" class="btn-modal btn-secondary" onclick="fecharModalConta()">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <line x1="18" y1="6" x2="6" y2="18"></line>
            <line x1="6" y1="6" x2="18" y2="18"></line>
          </svg>
          Cancelar
        </button>
        <button type="submit" class="btn-modal btn-primary">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"></path>
            <polyline points="17,21 17,13 7,13 7,21"></polyline>
            <polyline points="7,3 7,8 15,8"></polyline>
          </svg>
          Criar Conta
        </button>
      </div>
    </form>
  </div>
</div>

<!-- PAYMENT MODAL -->
<div id="modalPagamento" class="modal-overlay">
  <div class="modal-container" style="max-width: 500px;">
    <div class="modal-header">
      <h3 class="modal-title">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <rect x="1" y="4" width="22" height="16" rx="2" ry="2"></rect>
          <line x1="1" y1="10" x2="23" y2="10"></line>
        </svg>
        Registrar Pagamento
      </h3>
      <button type="button" class="modal-close" onclick="fecharModalPagamento()">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <line x1="18" y1="6" x2="6" y2="18"></line>
          <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
      </button>
    </div>
    
    <form id="formPagamento" method="POST">
      <div class="modal-body">
        <div class="payment-info">
          <div class="info-group">
            <label class="info-label">Descrição da Conta</label>
            <div class="info-value" id="pagamentoDescricao">-</div>
          </div>
          
          <div class="info-row">
            <div class="info-group">
              <label class="info-label">Fornecedor</label>
              <div class="info-value" id="pagamentoFornecedor">-</div>
            </div>
            
            <div class="info-group">
              <label class="info-label">Valor</label>
              <div class="info-value highlight" id="pagamentoValor">R$ 0,00</div>
            </div>
          </div>
        </div>

        <div class="form-field" style="margin-top: 20px;">
          <label class="field-label">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
              <line x1="16" y1="2" x2="16" y2="6"></line>
              <line x1="8" y1="2" x2="8" y2="6"></line>
              <line x1="3" y1="10" x2="21" y2="10"></line>
            </svg>
            Data do Pagamento *
          </label>
          <input 
            type="date" 
            class="field-input" 
            id="dataPagamento" 
            name="data_pagamento" 
            required
            max="<%= new Date().toISOString().split('T')[0] %>"
          >
          <div class="field-hint">
            <small style="color: #f59e0b;">⚠️ A data não pode ser futura</small>
          </div>
        </div>
      </div>
      
      <div class="modal-footer">
        <button type="button" class="btn-modal btn-secondary" onclick="fecharModalPagamento()">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <line x1="18" y1="6" x2="6" y2="18"></line>
            <line x1="6" y1="6" x2="18" y2="18"></line>
          </svg>
          Cancelar
        </button>
        <button type="submit" class="btn-modal btn-primary">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <polyline points="20,6 9,17 4,12"></polyline>
          </svg>
          Confirmar Pagamento
        </button>
      </div>
    </form>
  </div>
</div>

<style>
/* ENTERPRISE PAYABLES DESIGN SYSTEM */
:root {
  --primary-color: #1e40af;
  --primary-hover: #1d4ed8;
  --secondary-color: #6b7280;
  --success-color: #059669;
  --warning-color: #d97706;
  --danger-color: #dc2626;
  --info-color: #0891b2;
  --surface-color: #ffffff;
  --background-color: #f8fafc;
  --border-color: #e5e7eb;
  --text-primary: #111827;
  --text-secondary: #6b7280;
  --text-muted: #9ca3af;
  --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
  --radius-sm: 6px;
  --radius-md: 8px;
  --radius-lg: 12px;
}

/* WORKSPACE LAYOUT */
.payables-workspace {
  max-width: 1400px;
  margin: 0 auto;
  padding: 32px;
  background: var(--background-color);
  min-height: calc(100vh - 120px);
}

/* EXECUTIVE HEADER */
.executive-header {
  background: var(--surface-color);
  border-radius: var(--radius-lg);
  padding: 32px;
  margin-bottom: 24px;
  box-shadow: var(--shadow-sm);
  border: 1px solid var(--border-color);
}

.header-content {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 24px;
}

.title-section {
  flex: 1;
}

.executive-title {
  font-size: 32px;
  font-weight: 700;
  color: var(--text-primary);
  margin-bottom: 8px;
  display: flex;
  align-items: center;
  gap: 16px;
}

.title-icon {
  color: var(--primary-color);
  flex-shrink: 0;
}

.executive-subtitle {
  font-size: 16px;
  color: var(--text-secondary);
  line-height: 1.5;
}

.header-actions {
  display: flex;
  gap: 12px;
}

/* BUTTONS */
.btn-executive {
  display: inline-flex;
  align-items: center;
  gap: 8px;
  padding: 12px 24px;
  border: none;
  border-radius: var(--radius-md);
  font-size: 14px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
  text-decoration: none;
  white-space: nowrap;
}

.btn-primary {
  background: var(--primary-color);
  color: white;
}

.btn-primary:hover {
  background: var(--primary-hover);
  transform: translateY(-1px);
  box-shadow: var(--shadow-md);
}

/* INFO BANNER */
.info-banner {
  background: #eff6ff;
  border: 1px solid #bfdbfe;
  border-radius: var(--radius-md);
  padding: 16px 20px;
  margin-bottom: 24px;
  display: flex;
  align-items: flex-start;
  gap: 12px;
}

.banner-icon {
  color: var(--info-color);
  flex-shrink: 0;
  margin-top: 2px;
}

.banner-content {
  font-size: 14px;
  color: #1e40af;
  line-height: 1.5;
}

/* CONTROLS PANEL */
.controls-panel {
  background: var(--surface-color);
  border-radius: var(--radius-lg);
  padding: 24px;
  margin-bottom: 32px;
  box-shadow: var(--shadow-sm);
  border: 1px solid var(--border-color);
}

.controls-header {
  margin-bottom: 20px;
}

.controls-title {
  font-size: 18px;
  font-weight: 600;
  color: var(--text-primary);
  display: flex;
  align-items: center;
  gap: 10px;
}

.controls-content {
  display: flex;
  align-items: end;
  gap: 20px;
  flex-wrap: wrap;
}

.control-group {
  display: flex;
  flex-direction: column;
  gap: 6px;
  min-width: 180px;
}

.control-label {
  font-size: 14px;
  font-weight: 500;
  color: var(--text-primary);
  display: flex;
  align-items: center;
  gap: 6px;
}

.control-input {
  padding: 10px 12px;
  border: 1px solid var(--border-color);
  border-radius: var(--radius-sm);
  font-size: 14px;
  background: var(--surface-color);
  color: var(--text-primary);
  transition: border-color 0.2s ease;
}

.control-input:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 3px rgba(30, 64, 175, 0.1);
}

.control-actions {
  display: flex;
  gap: 8px;
}

.btn-control {
  display: inline-flex;
  align-items: center;
  gap: 6px;
  padding: 10px 16px;
  border: none;
  border-radius: var(--radius-sm);
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  text-decoration: none;
  transition: all 0.2s ease;
}

.btn-secondary {
  background: #f3f4f6;
  color: var(--text-secondary);
  border: 1px solid var(--border-color);
}

.btn-secondary:hover {
  background: #e5e7eb;
  color: var(--text-primary);
}

/* PAYABLES SECTION */
.payables-section {
  background: var(--surface-color);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-sm);
  border: 1px solid var(--border-color);
  overflow: hidden;
}

.section-header {
  padding: 24px;
  border-bottom: 1px solid var(--border-color);
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: #f8fafc;
}

.section-title {
  font-size: 20px;
  font-weight: 600;
  color: var(--text-primary);
  display: flex;
  align-items: center;
  gap: 12px;
}

.section-info {
  display: flex;
  align-items: center;
  gap: 16px;
}

.record-count {
  font-size: 14px;
  color: var(--text-secondary);
}

.table-container {
  overflow-x: auto;
}

.payables-table {
  width: 100%;
  border-collapse: collapse;
}

.payables-table th {
  background: #f8fafc;
  padding: 16px;
  text-align: left;
  font-size: 12px;
  font-weight: 600;
  color: var(--text-secondary);
  text-transform: uppercase;
  letter-spacing: 0.5px;
  border-bottom: 1px solid var(--border-color);
  white-space: nowrap;
}

.payables-table td {
  padding: 16px;
  border-bottom: 1px solid #f1f5f9;
  vertical-align: middle;
}

.payable-row:hover {
  background: #f8fafc;
}

/* TABLE CELLS */
.td-description {
  min-width: 200px;
}

.description-info {
  display: flex;
  flex-direction: column;
  gap: 2px;
}

.description-name {
  font-weight: 500;
  color: var(--text-primary);
}

.td-supplier {
  min-width: 150px;
}

.supplier-description {
  color: var(--text-secondary);
  font-size: 14px;
}

.td-due {
  min-width: 120px;
}

.due-date {
  font-family: 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace;
  font-size: 14px;
  color: var(--text-primary);
}

.due-date.due-overdue {
  color: var(--danger-color);
  font-weight: 600;
}

.due-indicator {
  font-size: 12px;
  color: var(--danger-color);
  font-weight: 500;
  display: block;
  margin-top: 2px;
}

.td-amount {
  min-width: 120px;
  text-align: right;
}

.amount-value {
  font-size: 16px;
  font-weight: 600;
  color: var(--text-primary);
  font-family: 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace;
}

.td-status {
  min-width: 100px;
}

.status-badge {
  display: inline-flex;
  align-items: center;
  gap: 6px;
  padding: 6px 12px;
  border-radius: var(--radius-sm);
  font-size: 12px;
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.status-paid {
  background: #dcfce7;
  color: #166534;
}

.status-pending {
  background: #fef3c7;
  color: #92400e;
}

.td-category {
  min-width: 140px;
}

.category-description {
  color: var(--text-secondary);
  font-size: 14px;
}

.td-actions {
  min-width: 160px;
}

.action-buttons {
  display: flex;
  gap: 6px;
  justify-content: flex-end;
}

.btn-action {
  display: inline-flex;
  align-items: center;
  gap: 4px;
  padding: 6px 10px;
  border: none;
  border-radius: var(--radius-sm);
  font-size: 12px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  text-decoration: none;
  white-space: nowrap;
}

.btn-success {
  background: #dcfce7;
  color: #166534;
}

.btn-success:hover {
  background: #bbf7d0;
  color: #14532d;
}

.btn-warning {
  background: #fef3c7;
  color: #92400e;
}

.btn-warning:hover {
  background: #fde68a;
  color: #78350f;
}

.btn-danger {
  background: #fef2f2;
  color: #991b1b;
}

.btn-danger:hover {
  background: #fecaca;
  color: #7f1d1d;
}

/* TABLE FOOTER */
.total-row {
  background: #f8fafc;
  font-weight: 600;
  border-top: 2px solid var(--border-color);
}

.total-pending-row {
  background: #fffbeb;
  font-weight: 600;
  color: var(--warning-color);
}

.total-label,
.total-pending-label {
  text-align: right;
  color: var(--text-primary);
}

.total-value,
.total-pending-value {
  text-align: right;
  font-family: 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace;
  font-size: 16px;
}

.empty-state {
  text-align: center;
  padding: 64px 32px;
}

.empty-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 16px;
  color: var(--text-muted);
}

/* MODAL */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: none;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  padding: 20px;
}

.modal-overlay.active {
  display: flex;
}

.modal-container {
  background: var(--surface-color);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-lg);
  width: 100%;
  max-width: 600px;
  max-height: 90vh;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

.modal-header {
  padding: 24px;
  border-bottom: 1px solid var(--border-color);
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: #f8fafc;
  flex-shrink: 0;
}

.modal-title {
  font-size: 20px;
  font-weight: 600;
  color: var(--text-primary);
  display: flex;
  align-items: center;
  gap: 12px;
}

.modal-close {
  background: none;
  border: none;
  color: var(--text-secondary);
  cursor: pointer;
  padding: 4px;
  border-radius: var(--radius-sm);
  transition: all 0.2s ease;
}

.modal-close:hover {
  background: #e5e7eb;
  color: var(--text-primary);
}

.modal-body {
  padding: 24px;
  overflow-y: auto;
  flex: 1;
}

.form-row {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 20px;
  margin-bottom: 20px;
}

.form-field {
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.form-field.full-width {
  grid-column: 1 / -1;
}

.field-label {
  font-size: 14px;
  font-weight: 500;
  color: var(--text-primary);
  display: flex;
  align-items: center;
  gap: 6px;
}

.field-input {
  padding: 12px;
  border: 1px solid var(--border-color);
  border-radius: var(--radius-sm);
  font-size: 14px;
  transition: border-color 0.2s ease;
}

.field-input:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 3px rgba(30, 64, 175, 0.1);
}

.field-hint {
  margin-top: 4px;
}

.hint-link {
  font-size: 12px;
  color: var(--primary-color);
  text-decoration: none;
}

.hint-link:hover {
  text-decoration: underline;
}

.modal-footer {
  padding: 20px 24px;
  border-top: 1px solid var(--border-color);
  display: flex;
  justify-content: flex-end;
  gap: 12px;
  background: #f8fafc;
  flex-shrink: 0;
}

.btn-modal {
  display: inline-flex;
  align-items: center;
  gap: 8px;
  padding: 10px 20px;
  border: none;
  border-radius: var(--radius-sm);
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
}

/* PAYMENT MODAL SPECIFIC */
.payment-info {
  background: #f8fafc;
  border-radius: var(--radius-md);
  padding: 16px;
  margin-bottom: 16px;
}

.info-group {
  margin-bottom: 12px;
}

.info-group:last-child {
  margin-bottom: 0;
}

.info-label {
  font-size: 12px;
  font-weight: 600;
  color: #64748b;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  margin-bottom: 4px;
  display: block;
}

.info-value {
  font-size: 15px;
  color: #1e293b;
  font-weight: 500;
}

.info-value.highlight {
  font-size: 18px;
  font-weight: 700;
  color: #059669;
}

.info-row {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 16px;
}

/* RESPONSIVE DESIGN */
@media (max-width: 1024px) {
  .payables-workspace {
    padding: 20px;
  }
  
  .controls-content {
    flex-direction: column;
    align-items: stretch;
  }
  
  .control-group {
    min-width: auto;
  }
}

@media (max-width: 768px) {
  .payables-workspace {
    padding: 16px;
  }
  
  .header-content {
    flex-direction: column;
    gap: 16px;
    text-align: center;
  }
  
  .executive-title {
    font-size: 24px;
  }
  
  .form-row, .info-row {
    grid-template-columns: 1fr;
  }
  
  .section-header {
    flex-direction: column;
    gap: 12px;
    text-align: center;
  }
  
  .payables-table {
    font-size: 14px;
  }
  
  .payables-table th,
  .payables-table td {
    padding: 12px 8px;
  }
  
  .action-buttons {
    flex-direction: column;
    gap: 4px;
  }
  
  .btn-action {
    justify-content: center;
  }
}
</style>

<script>
function abrirModalConta() {
  document.getElementById('modalNovaConta').classList.add('active');
  document.body.style.overflow = 'hidden';
}

function fecharModalConta() {
  document.getElementById('modalNovaConta').classList.remove('active');
  document.body.style.overflow = 'auto';
}

function abrirModalPagamento(contaId, descricao, fornecedor, valor) {
  console.log('🔓 Abrindo modal de pagamento', { contaId, descricao, fornecedor, valor });
  
  try {
    const modalEl = document.getElementById('modalPagamento');
    const formEl = document.getElementById('formPagamento');
    const descricaoEl = document.getElementById('pagamentoDescricao');
    const fornecedorEl = document.getElementById('pagamentoFornecedor');
    const valorEl = document.getElementById('pagamentoValor');
    const dataEl = document.getElementById('dataPagamento');

    if (!modalEl || !formEl || !descricaoEl || !fornecedorEl || !valorEl || !dataEl) {
      console.error('❌ Erro: Elementos do modal não encontrados');
      alert('Erro interno: Elementos do modal não encontrados. Recarregue a página.');
      return;
    }

    descricaoEl.textContent = descricao;
    fornecedorEl.textContent = fornecedor;
    valorEl.textContent = 'R$ ' + parseFloat(valor).toLocaleString('pt-BR', {minimumFractionDigits: 2});
    
    formEl.action = '/contas-a-pagar/pagar/' + contaId;
    
    const hoje = new Date().toISOString().split('T')[0];
    dataEl.value = hoje;
    
    modalEl.classList.add('active');
    modalEl.style.display = 'flex';
    
    console.log('✅ Modal aberto com sucesso');
    
    setTimeout(() => {
      dataEl.focus();
    }, 300);
    
  } catch (error) {
    console.error('❌ Erro ao abrir modal:', error);
    alert('Erro ao abrir modal de pagamento. Recarregue a página e tente novamente.');
  }
}

function fecharModalPagamento() {
  console.log('🔒 Fechando modal de pagamento');
  const modalEl = document.getElementById('modalPagamento');
  if (modalEl) {
    modalEl.classList.remove('active');
    modalEl.style.display = 'none';
  }
  document.body.style.overflow = 'auto';
}

document.addEventListener('DOMContentLoaded', function() {
  console.log('📄 DOM carregado, configurando modal de pagamento...');
  
  document.addEventListener('click', function(e) {
    const btnPagar = e.target.closest('.btn-pagar-conta');
    if (!btnPagar) return;
    
    const contaId = btnPagar.dataset.contaId;
    const descricao = btnPagar.dataset.descricao;
    const fornecedor = btnPagar.dataset.fornecedor;
    const valor = btnPagar.dataset.valor;
    
    abrirModalPagamento(contaId, descricao, fornecedor, valor);
  });
  
  const modalEl = document.getElementById('modalPagamento');
  const formEl = document.getElementById('formPagamento');
  
  if (!modalEl || !formEl) {
    console.error('❌ Modal de pagamento não encontrado!');
    return;
  }

  modalEl.addEventListener('click', function(e) {
    if (e.target === modalEl) {
      fecharModalPagamento();
    }
  });

  document.addEventListener('keydown', function(e) {
    if (e.key === 'Escape' && modalEl.classList.contains('active')) {
      fecharModalPagamento();
    }
  });

  formEl.addEventListener('submit', function(e) {
    const dataPagamento = document.getElementById('dataPagamento').value;
    
    if (!dataPagamento) {
      e.preventDefault();
      alert('Por favor, selecione a data do pagamento.');
      return;
    }
    
    const hoje = new Date().toISOString().split('T')[0];
    if (dataPagamento > hoje) {
      e.preventDefault();
      alert('A data de pagamento não pode ser no futuro.');
      return;
    }
    
    const confirmacao = confirm('Confirma o pagamento desta conta na data selecionada?');
    if (!confirmacao) {
      e.preventDefault();
      return;
    }
    
    console.log('✅ Formulário validado e enviado');
  });

  console.log('✅ Modal de pagamento configurado com sucesso');
});
</script>

<%- include('partials/footer') %>