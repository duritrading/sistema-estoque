<%- include('partials/header', {
  titulo: 'Gestão de Movimentações',
  subtitulo: 'Controle de estoque e operações',
  user: locals.user,
  currentPage: 'movimentacoes'
}) %>

<div class="movimentacoes-workspace">
  <div class="page-header">
    <div class="header-top">
      <div class="header-info">
        <h1 class="page-title">Movimentações de Estoque</h1>
        <p class="page-description">Gerencie entradas e saídas de produtos</p>
      </div>
      <button type="button" class="btn-primary" onclick="openCreateModal()">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <line x1="12" y1="5" x2="12" y2="19"></line>
          <line x1="5" y1="12" x2="19" y2="12"></line>
        </svg>
        Nova Movimentação
      </button>
    </div>

    <div class="filters-integrated">
      <div class="filter-item">
        <label>Tipo</label>
        <select id="filtroTipo" class="filter-select" onchange="applyFilters()">
          <option value="">Todos</option>
          <option value="ENTRADA" <%= filtros.tipo === 'ENTRADA' ? 'selected' : '' %>>Entrada</option>
          <option value="SAIDA" <%= filtros.tipo === 'SAIDA' ? 'selected' : '' %>>Saída</option>
        </select>
      </div>
      
      <div class="filter-item">
        <label>Produto</label>
        <select id="filtroProduto" class="filter-select" onchange="applyFilters()">
          <option value="">Todos os produtos</option>
          <% produtos.forEach(produto => { %>
            <option value="<%= produto.id %>" <%= filtros.produto_id == produto.id ? 'selected' : '' %>>
              <%= produto.codigo %> - <%= produto.descricao %>
            </option>
          <% }) %>
        </select>
      </div>
      
      <div class="filter-item">
        <label>Data Inicial</label>
        <input type="date" id="filtroDataInicial" class="filter-input" 
               value="<%= filtros.data_inicial || '' %>" onchange="applyFilters()">
      </div>
      
      <div class="filter-item">
        <label>Data Final</label>
        <input type="date" id="filtroDataFinal" class="filter-input" 
               value="<%= filtros.data_fim || '' %>" onchange="applyFilters()">
      </div>

      <button type="button" class="btn-clear" onclick="clearFilters()">
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <line x1="18" y1="6" x2="6" y2="18"></line>
          <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
        Limpar
      </button>
    </div>
  </div>

  <!-- KPIs Dashboard -->
  <div class="kpis-dashboard">
    <div class="kpi-card green">
      <div class="kpi-icon">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <line x1="12" y1="5" x2="12" y2="19"></line>
          <line x1="5" y1="12" x2="19" y2="12"></line>
        </svg>
      </div>
      <div class="kpi-content">
        <div class="kpi-label">Entradas do Mês</div>
        <div class="kpi-value"><%= metrics.entradas_mes %></div>
        <div class="kpi-subtitle">movimentações</div>
      </div>
    </div>

    <div class="kpi-card red">
      <div class="kpi-icon">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <line x1="5" y1="12" x2="19" y2="12"></line>
        </svg>
      </div>
      <div class="kpi-content">
        <div class="kpi-label">Saídas do Mês</div>
        <div class="kpi-value"><%= metrics.saidas_mes %></div>
        <div class="kpi-subtitle">movimentações</div>
      </div>
    </div>

    <div class="kpi-card blue">
      <div class="kpi-icon">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>
          <line x1="9" y1="9" x2="15" y2="15"></line>
          <line x1="15" y1="9" x2="9" y2="15"></line>
        </svg>
      </div>
      <div class="kpi-content">
        <div class="kpi-label">Total de Movimentações</div>
        <div class="kpi-value"><%= metrics.total_movimentacoes %></div>
        <div class="kpi-subtitle">registros</div>
      </div>
    </div>

    <div class="kpi-card orange">
      <div class="kpi-icon">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <line x1="12" y1="1" x2="12" y2="23"></line>
          <path d="M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"></path>
        </svg>
      </div>
      <div class="kpi-content">
        <div class="kpi-label">Valor Total</div>
        <div class="kpi-value">R$ <%= metrics.valor_total.toLocaleString('pt-BR', {minimumFractionDigits: 2, maximumFractionDigits: 2}) %></div>
        <div class="kpi-subtitle">movimentado</div>
      </div>
    </div>
  </div>

  <div class="table-container">
    <table class="movimentacoes-table">
      <thead>
        <tr>
          <th>Data</th>
          <th>Tipo</th>
          <th>Produto</th>
          <th>Quantidade</th>
          <th>Valor Unit.</th>
          <th>Valor Total</th>
          <th>Origem/Destino</th>
          <th>Ações</th>
        </tr>
      </thead>
      <tbody>
        <% if (movimentacoes.length > 0) { %>
          <% movimentacoes.forEach(mov => { %>
            <tr>
              <td><%= new Date(mov.created_at).toLocaleDateString('pt-BR') %></td>
              <td>
                <span class="badge <%= mov.tipo === 'ENTRADA' ? 'badge-success' : 'badge-warning' %>">
                  <%= mov.tipo %>
                </span>
              </td>
              <td>
                <div class="product-info">
                  <span class="product-code"><%= mov.produto_codigo %></span>
                  <span class="product-desc"><%= mov.produto_descricao %></span>
                </div>
              </td>
              <td><%= parseFloat(mov.quantidade).toFixed(3) %></td>
              <td>R$ <%= mov.preco_unitario ? parseFloat(mov.preco_unitario).toFixed(2) : '-' %></td>
              <td>R$ <%= mov.valor_total ? parseFloat(mov.valor_total).toFixed(2) : '-' %></td>
              <td>
                <% if (mov.tipo === 'ENTRADA' && mov.fornecedor_nome) { %>
                  <%= mov.fornecedor_nome %>
                <% } else if (mov.tipo === 'SAIDA' && mov.cliente_nome) { %>
                  <%= mov.cliente_nome %>
                <% } else { %>
                  -
                <% } %>
              </td>
              <td>
                <div class="action-buttons">
                  <button class="btn-action view" data-id="<%= mov.id %>" data-action="view" title="Visualizar">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                      <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>
                      <circle cx="12" cy="12" r="3"></circle>
                    </svg>
                  </button>
                  <button class="btn-action edit" data-id="<%= mov.id %>" data-action="edit" title="Editar">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                      <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path>
                      <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>
                    </svg>
                  </button>
                  <button class="btn-action delete" data-id="<%= mov.id %>" data-action="delete" title="Excluir">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                      <polyline points="3,6 5,6 21,6"></polyline>
                      <path d="M19,6v14a2,2,0,0,1-2,2H7a2,2,0,0,1-2-2V6m3,0V4a2,2,0,0,1,2-2h4a2,2,0,0,1,2,2V6"></path>
                    </svg>
                  </button>
                </div>
              </td>
            </tr>
          <% }) %>
        <% } else { %>
          <tr>
            <td colspan="8" class="empty-state">
              <svg width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1">
                <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"></path>
                <rect x="8" y="2" width="8" height="4" rx="1" ry="1"></rect>
              </svg>
              <h3>Nenhuma movimentação encontrada</h3>
              <p>Crie sua primeira movimentação ou ajuste os filtros</p>
            </td>
          </tr>
        <% } %>
      </tbody>
    </table>
  </div>
</div>

<!-- Modal Criar/Editar -->
<div id="modalForm" class="modal-overlay">
  <div class="modal-container">
    <div class="modal-header">
      <h2 id="modalTitle">Nova Movimentação</h2>
      <button class="modal-close" onclick="closeModal('modalForm')">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <line x1="18" y1="6" x2="6" y2="18"></line>
          <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
      </button>
    </div>

    <form id="movimentacaoForm" method="POST" class="modal-form">
      <div class="form-grid">
        <div class="form-group">
          <label for="tipo">Tipo *</label>
          <select id="tipo" name="tipo" required onchange="updateFormFields()">
            <option value="">Selecione</option>
            <option value="ENTRADA">Entrada</option>
            <option value="SAIDA">Saída</option>
          </select>
        </div>

        <div class="form-group">
          <label for="produto_id">Produto *</label>
          <select id="produto_id" name="produto_id" required>
            <option value="">Selecione</option>
            <% produtos.forEach(produto => { %>
              <option value="<%= produto.id %>"><%= produto.codigo %> - <%= produto.descricao %></option>
            <% }) %>
          </select>
        </div>

        <div class="form-group">
          <label for="quantidade">Quantidade *</label>
          <input type="number" id="quantidade" name="quantidade" step="0.001" required>
        </div>

        <div class="form-group">
          <label for="preco_unitario">Preço Unitário</label>
          <input type="number" id="preco_unitario" name="preco_unitario" step="0.01">
        </div>

        <div class="form-group" id="fornecedor_group" style="display: none;">
          <label for="fornecedor_id">Fornecedor</label>
          <select id="fornecedor_id" name="fornecedor_id">
            <option value="">Selecione</option>
            <% fornecedores.forEach(f => { %>
              <option value="<%= f.id %>"><%= f.nome %></option>
            <% }) %>
          </select>
        </div>

        <div class="form-group" id="cliente_group" style="display: none;">
          <label for="cliente_nome">Cliente</label>
          <input type="text" id="cliente_nome" name="cliente_nome">
        </div>

        <div class="form-group">
          <label for="rca">RCA</label>
          <select id="rca" name="rca">
            <option value="">Selecione</option>
            <% rcas.forEach(r => { %>
              <option value="<%= r.nome %>"><%= r.nome %></option>
            <% }) %>
          </select>
        </div>

        <div class="form-group">
          <label for="documento">Documento</label>
          <input type="text" id="documento" name="documento">
        </div>

        <div class="form-group full-width">
          <label for="observacao">Observações</label>
          <textarea id="observacao" name="observacao" rows="3"></textarea>
        </div>
      </div>

      <div class="modal-actions">
        <button type="button" class="btn-cancel" onclick="closeModal('modalForm')">Cancelar</button>
        <button type="submit" class="btn-submit">Salvar</button>
      </div>
    </form>
  </div>
</div>

<!-- Modal Visualizar -->
<div id="modalView" class="modal-overlay">
  <div class="modal-container">
    <div class="modal-header">
      <h2>Detalhes da Movimentação</h2>
      <button class="modal-close" onclick="closeModal('modalView')">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <line x1="18" y1="6" x2="6" y2="18"></line>
          <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
      </button>
    </div>

    <div class="view-content" id="viewContent">
      <div class="loading">Carregando...</div>
    </div>

    <div class="modal-actions">
      <button type="button" class="btn-cancel" onclick="closeModal('modalView')">Fechar</button>
    </div>
  </div>
</div>

<style>
.movimentacoes-workspace {
  max-width: 1400px;
  margin: 0 auto;
  padding: 24px;
  background: #f8fafc;
  min-height: 100vh;
}

.page-header {
  background: white;
  border-radius: 12px;
  padding: 24px;
  margin-bottom: 24px;
  box-shadow: 0 1px 3px rgba(0,0,0,0.1);
}

.header-top {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 24px;
  padding-bottom: 20px;
  border-bottom: 1px solid #e5e7eb;
}

.page-title {
  font-size: 28px;
  font-weight: 700;
  color: #1e3a5f;
  margin: 0 0 4px 0;
}

.page-description {
  color: #64748b;
  margin: 0;
}

.filters-integrated {
  display: flex;
  gap: 16px;
  align-items: flex-end;
  flex-wrap: wrap;
}

.filter-item {
  display: flex;
  flex-direction: column;
  gap: 4px;
  flex: 1;
  min-width: 180px;
}

.filter-item label {
  font-size: 13px;
  font-weight: 500;
  color: #475569;
}

.filter-select, .filter-input {
  padding: 8px 12px;
  border: 1px solid #cbd5e1;
  border-radius: 6px;
  font-size: 14px;
  background: white;
  transition: all 0.2s;
}

.filter-select:hover, .filter-input:hover {
  border-color: #94a3b8;
}

.filter-select:focus, .filter-input:focus {
  outline: none;
  border-color: #1e3a5f;
  box-shadow: 0 0 0 3px rgba(30, 58, 95, 0.1);
}

.btn-clear {
  padding: 8px 16px;
  background: #f1f5f9;
  border: 1px solid #cbd5e1;
  border-radius: 6px;
  color: #475569;
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: 6px;
  transition: all 0.2s;
}

.btn-clear:hover {
  background: #e2e8f0;
  border-color: #94a3b8;
}

/* KPIs Dashboard */
.kpis-dashboard {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 20px;
  margin-bottom: 24px;
}

.kpi-card {
  background: white;
  border-radius: 12px;
  padding: 24px;
  display: flex;
  align-items: center;
  gap: 16px;
  box-shadow: 0 1px 3px rgba(0,0,0,0.1);
  border-top: 4px solid;
  transition: all 0.3s;
}

.kpi-card:hover {
  transform: translateY(-4px);
  box-shadow: 0 8px 16px rgba(0,0,0,0.15);
}

.kpi-card.green {
  border-top-color: #10b981;
}

.kpi-card.red {
  border-top-color: #ef4444;
}

.kpi-card.blue {
  border-top-color: #3b82f6;
}

.kpi-card.orange {
  border-top-color: #f59e0b;
}

.kpi-icon {
  width: 56px;
  height: 56px;
  border-radius: 12px;
  display: flex;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
}

.kpi-card.green .kpi-icon {
  background: #d1fae5;
  color: #10b981;
}

.kpi-card.red .kpi-icon {
  background: #fee2e2;
  color: #ef4444;
}

.kpi-card.blue .kpi-icon {
  background: #dbeafe;
  color: #3b82f6;
}

.kpi-card.orange .kpi-icon {
  background: #fef3c7;
  color: #f59e0b;
}

.kpi-content {
  flex: 1;
  min-width: 0;
}

.kpi-label {
  font-size: 13px;
  font-weight: 500;
  color: #64748b;
  margin-bottom: 4px;
}

.kpi-value {
  font-size: 32px;
  font-weight: 700;
  color: #1e293b;
  line-height: 1;
  margin-bottom: 4px;
}

.kpi-subtitle {
  font-size: 12px;
  color: #94a3b8;
}

.btn-primary {
  padding: 10px 20px;
  background: #1e3a5f;
  color: white;
  border: none;
  border-radius: 8px;
  font-weight: 600;
  cursor: pointer;
  display: flex;
  align-items: center;
  gap: 8px;
  transition: all 0.2s;
}

.btn-primary:hover {
  background: #2d5a8e;
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(30, 58, 95, 0.3);
}

.table-container {
  background: white;
  border-radius: 12px;
  box-shadow: 0 1px 3px rgba(0,0,0,0.1);
  overflow: hidden;
}

.movimentacoes-table {
  width: 100%;
  border-collapse: collapse;
}

.movimentacoes-table th {
  background: #f8fafc;
  padding: 12px 16px;
  text-align: left;
  font-size: 12px;
  font-weight: 600;
  color: #475569;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  border-bottom: 2px solid #e5e7eb;
}

.movimentacoes-table td {
  padding: 16px;
  border-bottom: 1px solid #f1f5f9;
}

.movimentacoes-table tr:hover {
  background: #f8fafc;
}

.badge {
  display: inline-block;
  padding: 4px 12px;
  border-radius: 12px;
  font-size: 12px;
  font-weight: 600;
}

.badge-success {
  background: #d1fae5;
  color: #065f46;
}

.badge-warning {
  background: #fef3c7;
  color: #92400e;
}

.product-info {
  display: flex;
  flex-direction: column;
  gap: 2px;
}

.product-code {
  font-weight: 600;
  color: #1e293b;
}

.product-desc {
  font-size: 13px;
  color: #64748b;
}

.action-buttons {
  display: flex;
  gap: 6px;
}

.btn-action {
  padding: 6px;
  background: white;
  border: 1px solid #e5e7eb;
  border-radius: 6px;
  cursor: pointer;
  transition: all 0.2s;
  color: #64748b;
}

.btn-action:hover {
  transform: translateY(-1px);
}

.btn-action.view:hover {
  background: #eff6ff;
  border-color: #3b82f6;
  color: #3b82f6;
}

.btn-action.edit:hover {
  background: #fef3c7;
  border-color: #f59e0b;
  color: #f59e0b;
}

.btn-action.delete:hover {
  background: #fee2e2;
  border-color: #ef4444;
  color: #ef4444;
}

.empty-state {
  padding: 60px 20px !important;
  text-align: center;
}

.empty-state svg {
  margin: 0 auto 16px;
  color: #cbd5e1;
}

.empty-state h3 {
  color: #475569;
  margin: 0 0 8px 0;
}

.empty-state p {
  color: #94a3b8;
  margin: 0;
}

.modal-overlay {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0,0,0,0.5);
  z-index: 9999;
  align-items: center;
  justify-content: center;
}

.modal-overlay.active {
  display: flex;
}

.modal-container {
  background: white;
  border-radius: 12px;
  width: 90%;
  max-width: 700px;
  max-height: 90vh;
  overflow: auto;
  box-shadow: 0 20px 25px -5px rgba(0,0,0,0.1);
}

.modal-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 20px 24px;
  border-bottom: 1px solid #e5e7eb;
}

.modal-header h2 {
  font-size: 20px;
  font-weight: 600;
  color: #1e293b;
  margin: 0;
}

.modal-close {
  background: none;
  border: none;
  cursor: pointer;
  color: #64748b;
  padding: 4px;
  border-radius: 6px;
  transition: all 0.2s;
}

.modal-close:hover {
  background: #f1f5f9;
  color: #1e293b;
}

.modal-form {
  padding: 24px;
}

.form-grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 16px;
}

.form-group {
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.form-group.full-width {
  grid-column: 1 / -1;
}

.form-group label {
  font-size: 14px;
  font-weight: 500;
  color: #374151;
}

.form-group input,
.form-group select,
.form-group textarea {
  padding: 8px 12px;
  border: 1px solid #d1d5db;
  border-radius: 6px;
  font-size: 14px;
  font-family: inherit;
}

.form-group input:focus,
.form-group select:focus,
.form-group textarea:focus {
  outline: none;
  border-color: #1e3a5f;
  box-shadow: 0 0 0 3px rgba(30, 58, 95, 0.1);
}

.modal-actions {
  display: flex;
  justify-content: flex-end;
  gap: 12px;
  padding: 16px 24px;
  border-top: 1px solid #e5e7eb;
  background: #f8fafc;
}

.btn-cancel {
  padding: 8px 16px;
  background: white;
  border: 1px solid #d1d5db;
  border-radius: 6px;
  color: #374151;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s;
}

.btn-cancel:hover {
  background: #f3f4f6;
}

.btn-submit {
  padding: 8px 20px;
  background: #1e3a5f;
  color: white;
  border: none;
  border-radius: 6px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s;
}

.btn-submit:hover {
  background: #2d5a8e;
}

.view-content {
  padding: 24px;
}

.view-grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 20px;
}

.view-field {
  display: flex;
  flex-direction: column;
  gap: 4px;
}

.view-label {
  font-size: 12px;
  font-weight: 600;
  color: #64748b;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.view-value {
  font-size: 15px;
  color: #1e293b;
  font-weight: 500;
}

.loading {
  text-align: center;
  padding: 40px;
  color: #64748b;
}

@media (max-width: 1200px) {
  .kpis-dashboard {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (max-width: 768px) {
  .filters-integrated {
    flex-direction: column;
    align-items: stretch;
  }
  
  .filter-item {
    min-width: 100%;
  }
  
  .kpis-dashboard {
    grid-template-columns: 1fr;
    gap: 16px;
  }
  
  .kpi-card {
    padding: 20px;
  }
  
  .kpi-value {
    font-size: 28px;
  }
  
  .form-grid, .view-grid {
    grid-template-columns: 1fr;
  }
  
  .header-top {
    flex-direction: column;
    gap: 16px;
    align-items: stretch;
  }
  
  .movimentacoes-table {
    font-size: 13px;
  }
  
  .movimentacoes-table th,
  .movimentacoes-table td {
    padding: 10px;
  }
}
</style>

<script>
// Event delegation para botões de ação
document.addEventListener('DOMContentLoaded', function() {
  document.querySelector('.movimentacoes-table')?.addEventListener('click', function(e) {
    const button = e.target.closest('.btn-action');
    if (!button) return;
    
    const id = button.dataset.id;
    const action = button.dataset.action;
    
    if (action === 'view') viewMovimentacao(id);
    else if (action === 'edit') editMovimentacao(id);
    else if (action === 'delete') deleteMovimentacao(id);
  });
});

// Filtros automáticos
function applyFilters() {
  const tipo = document.getElementById('filtroTipo').value;
  const produto = document.getElementById('filtroProduto').value;
  const dataInicial = document.getElementById('filtroDataInicial').value;
  const dataFinal = document.getElementById('filtroDataFinal').value;
  
  const params = new URLSearchParams();
  if (tipo) params.append('tipo', tipo);
  if (produto) params.append('produto_id', produto);
  if (dataInicial) params.append('data_inicial', dataInicial);
  if (dataFinal) params.append('data_fim', dataFinal);
  
  window.location.href = '/movimentacoes?' + params.toString();
}

function clearFilters() {
  window.location.href = '/movimentacoes';
}

// Modal controls
function closeModal(modalId) {
  document.getElementById(modalId).classList.remove('active');
  document.body.style.overflow = 'auto';
}

function openCreateModal() {
  document.getElementById('modalTitle').textContent = 'Nova Movimentação';
  document.getElementById('movimentacaoForm').action = '/movimentacoes';
  document.getElementById('movimentacaoForm').reset();
  document.getElementById('modalForm').classList.add('active');
  document.body.style.overflow = 'hidden';
}

function updateFormFields() {
  const tipo = document.getElementById('tipo').value;
  const fornecedorGroup = document.getElementById('fornecedor_group');
  const clienteGroup = document.getElementById('cliente_group');
  
  if (tipo === 'ENTRADA') {
    fornecedorGroup.style.display = 'block';
    clienteGroup.style.display = 'none';
  } else if (tipo === 'SAIDA') {
    fornecedorGroup.style.display = 'none';
    clienteGroup.style.display = 'block';
  } else {
    fornecedorGroup.style.display = 'none';
    clienteGroup.style.display = 'none';
  }
}

// View movimentação
async function viewMovimentacao(id) {
  try {
    const response = await fetch(`/movimentacoes/${id}`);
    const data = await response.json();
    
    const html = `
      <div class="view-grid">
        <div class="view-field">
          <span class="view-label">Data</span>
          <span class="view-value">${new Date(data.created_at).toLocaleDateString('pt-BR')}</span>
        </div>
        <div class="view-field">
          <span class="view-label">Tipo</span>
          <span class="view-value"><span class="badge ${data.tipo === 'ENTRADA' ? 'badge-success' : 'badge-warning'}">${data.tipo}</span></span>
        </div>
        <div class="view-field" style="grid-column: 1 / -1;">
          <span class="view-label">Produto</span>
          <span class="view-value">${data.produto_codigo} - ${data.produto_descricao}</span>
        </div>
        <div class="view-field">
          <span class="view-label">Quantidade</span>
          <span class="view-value">${parseFloat(data.quantidade).toFixed(3)}</span>
        </div>
        <div class="view-field">
          <span class="view-label">Preço Unitário</span>
          <span class="view-value">R$ ${data.preco_unitario ? parseFloat(data.preco_unitario).toFixed(2) : '-'}</span>
        </div>
        <div class="view-field">
          <span class="view-label">Valor Total</span>
          <span class="view-value">R$ ${data.valor_total ? parseFloat(data.valor_total).toFixed(2) : '-'}</span>
        </div>
        <div class="view-field">
          <span class="view-label">${data.tipo === 'ENTRADA' ? 'Fornecedor' : 'Cliente'}</span>
          <span class="view-value">${data.fornecedor_nome || data.cliente_nome || '-'}</span>
        </div>
        <div class="view-field">
          <span class="view-label">RCA</span>
          <span class="view-value">${data.rca || '-'}</span>
        </div>
        <div class="view-field">
          <span class="view-label">Documento</span>
          <span class="view-value">${data.documento || '-'}</span>
        </div>
        ${data.observacao ? `
        <div class="view-field" style="grid-column: 1 / -1;">
          <span class="view-label">Observações</span>
          <span class="view-value">${data.observacao}</span>
        </div>` : ''}
      </div>
    `;
    
    document.getElementById('viewContent').innerHTML = html;
    document.getElementById('modalView').classList.add('active');
    document.body.style.overflow = 'hidden';
  } catch (error) {
    alert('Erro ao carregar movimentação');
  }
}

// Edit movimentação
async function editMovimentacao(id) {
  try {
    const response = await fetch(`/movimentacoes/${id}`);
    const data = await response.json();
    
    document.getElementById('modalTitle').textContent = 'Editar Movimentação';
    document.getElementById('movimentacaoForm').action = `/movimentacoes/${id}/edit`;
    
    document.getElementById('tipo').value = data.tipo;
    document.getElementById('produto_id').value = data.produto_id;
    document.getElementById('quantidade').value = data.quantidade;
    document.getElementById('preco_unitario').value = data.preco_unitario || '';
    document.getElementById('fornecedor_id').value = data.fornecedor_id || '';
    document.getElementById('cliente_nome').value = data.cliente_nome || '';
    document.getElementById('rca').value = data.rca || '';
    document.getElementById('documento').value = data.documento || '';
    document.getElementById('observacao').value = data.observacao || '';
    
    updateFormFields();
    
    document.getElementById('modalForm').classList.add('active');
    document.body.style.overflow = 'hidden';
  } catch (error) {
    alert('Erro ao carregar movimentação');
  }
}

// Delete movimentação
function deleteMovimentacao(id) {
  if (confirm('Tem certeza que deseja excluir esta movimentação?')) {
    const form = document.createElement('form');
    form.method = 'POST';
    form.action = `/movimentacoes/delete/${id}`;
    document.body.appendChild(form);
    form.submit();
  }
}

// Close modal on outside click
document.querySelectorAll('.modal-overlay').forEach(modal => {
  modal.addEventListener('click', function(e) {
    if (e.target === this) {
      closeModal(this.id);
    }
  });
});
</script>

<%- include('partials/footer') %>