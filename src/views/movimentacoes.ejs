<%- include('partials/header', {
  titulo: 'Movimenta√ß√µes de Estoque',
  subtitulo: 'Entradas e sa√≠das de produtos',
  user: locals.user
}) %>

<div class="card">
  <h2>‚ûï Nova Movimenta√ß√£o</h2>
  <form action="/movimentacoes" method="POST">
    <div class="form-row">
      <div class="form-group">
        <label for="produto_id">Produto *</label>
        <select id="produto_id" name="produto_id" required>
          <option value="">Selecione um produto</option>
          <% produtos.forEach(p => { %>
            <option value="<%= p.id %>"><%= p.codigo %> - <%= p.descricao %></option>
          <% }) %>
        </select>
        <span id="unidade_produto" style="margin-left: 10px; font-weight: bold; color: #555;"></span>
      </div>
      <div class="form-group">
        <label for="tipo">Tipo *</label>
        <select id="tipo" name="tipo" required>
          <option value="">Selecione o tipo</option>
          <option value="ENTRADA">Entrada</option>
          <option value="SAIDA">Sa√≠da</option>
        </select>
      </div>
    </div>
    
    <div class="form-row">
      <div class="form-group">
        <label for="quantidade">Quantidade *</label>
        <input type="number" id="quantidade" name="quantidade" step="0.001" min="0.001" required>
      </div>
      <div class="form-group">
        <label for="preco_unitario">Pre√ßo Unit√°rio (R$)</label>
        <input type="number" id="preco_unitario" name="preco_unitario" step="0.01" min="0">
      </div>
    </div>

    <div id="entrada-fields" style="display: none;">
      <div class="form-group">
        <label for="fornecedor_id">Fornecedor</label>
        <select id="fornecedor_id" name="fornecedor_id">
          <option value="">Selecione um fornecedor</option>
          <% fornecedores.forEach(f => { %>
            <option value="<%= f.id %>"><%= f.nome %></option>
          <% }) %>
        </select>
      </div>
    </div>

    <div id="saida-fields" style="display: none;">
      <div class="form-row">
        <div class="form-group">
          <label for="cliente_nome">Cliente *</label>
          <input type="text" id="cliente_nome" name="cliente_nome">
        </div>
        <div class="form-group">
          <label for="rca">RCA</label>
          <input type="text" id="rca" name="rca">
        </div>
      </div>
      <div class="form-row">
        <div class="form-group">
            <label for="total_parcelas">N¬∫ de Parcelas</label>
            <input type="number" id="total_parcelas" name="total_parcelas" min="1" value="1">
        </div>
      </div>
      <div id="vencimentos-container" class="form-row"></div>
    </div>

    <div class="form-row">
      <div class="form-group">
        <label for="documento">Documento</label>
        <input type="text" id="documento" name="documento" placeholder="NF, Pedido, etc.">
      </div>
      <div class="form-group">
        <label for="valor_total">Valor Total (R$)</label>
        <input type="number" id="valor_total" name="valor_total" step="0.01" min="0" readonly>
      </div>
    </div>

    <div class="form-group">
      <label for="observacao">Observa√ß√µes</label>
      <textarea id="observacao" name="observacao" rows="3"></textarea>
    </div>

    <button type="submit" class="btn">Registrar Movimenta√ß√£o</button>
  </form>
</div>

<div class="card">
  <h2>üìã √öltimas Movimenta√ß√µes</h2>
  <table class="table">
    <thead>
      <tr>
        <th>Data</th>
        <th>Produto</th>
        <th>Tipo</th>
        <th>Quantidade</th>
        <th>Cliente/Fornecedor</th>
        <th>Documento</th>
        <th>Parcelas</th>
        <th>A√ß√µes</th> </tr>
    </thead>
    <tbody>
      <% movimentacoes.forEach(m => { %>
        <tr>
          <td><%= new Date(m.created_at).toLocaleDateString('pt-BR', { timeZone: 'UTC' }) %></td>
          <td><%= m.codigo %> - <%= m.descricao %></td>
          <td><span class="badge <%= m.tipo === 'ENTRADA' ? 'badge-success' : 'badge-danger' %>"><%= m.tipo %></span></td>
          <td><%= m.quantidade %></td>
          <td><%= m.tipo === 'ENTRADA' ? (m.fornecedor_nome || '-') : (m.cliente_nome || '-') %></td>
          <td><%= m.documento || '-' %></td>
          <td><%= m.total_parcelas || '-' %></td>
          <td> <form action="/movimentacoes/delete/<%= m.id %>" method="POST" onsubmit="return confirm('ATEN√á√ÉO: Excluir uma movimenta√ß√£o √© uma a√ß√£o irrevers√≠vel e ir√° apagar tamb√©m todas as parcelas de faturamento associadas a ela. Deseja continuar?');">
              <button type="submit" class="btn btn-danger" style="padding: 5px 10px; font-size: 12px;">Excluir</button>
            </form>
          </td>
        </tr>
      <% }) %>
    </tbody>
  </table>
</div>

<script type="application/json" id="produtos-data">
  <%- JSON.stringify(produtos) %>
</script>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const produtosDataElement = document.getElementById('produtos-data');
    if (!produtosDataElement) return;
    
    const produtos = JSON.parse(produtosDataElement.textContent);

    const produtoSelect = document.getElementById('produto_id');
    const quantidadeInput = document.getElementById('quantidade');
    const precoUnitarioInput = document.getElementById('preco_unitario');
    const spanUnidade = document.getElementById('unidade_produto');
    const valorTotalInput = document.getElementById('valor_total');
    const tipoSelect = document.getElementById('tipo');
    const entradaFields = document.getElementById('entrada-fields');
    const saidaFields = document.getElementById('saida-fields');
    const clienteNomeInput = document.getElementById('cliente_nome');
    const parcelasInput = document.getElementById('total_parcelas');

    function mostrarUnidade() {
      if (!produtoSelect || !spanUnidade) return;
      const produtoId = produtoSelect.value;
      spanUnidade.textContent = '';
      if (produtoId) {
        const produtoSelecionado = produtos.find(p => p.id == produtoId);
        if (produtoSelecionado) spanUnidade.textContent = `(${produtoSelecionado.unidade || 'UN'})`;
      }
    }

    function calcularValorTotal() {
      if (!quantidadeInput || !precoUnitarioInput || !valorTotalInput) return;
      const quantidade = parseFloat(quantidadeInput.value) || 0;
      const precoUnitario = parseFloat(precoUnitarioInput.value) || 0;
      valorTotalInput.value = (quantidade * precoUnitario).toFixed(2);
    }

    function gerarCamposDeVencimento() {
      if (!parcelasInput) return;
      const numParcelas = parseInt(parcelasInput.value) || 0;
      const container = document.getElementById('vencimentos-container');
      if (!container) return;
      container.innerHTML = '';

      if (numParcelas > 0) {
          const hoje = new Date();
          for (let i = 1; i <= numParcelas; i++) {
              const dataVencimento = new Date(hoje);
              dataVencimento.setDate(hoje.getDate() + (i * 30));
              const dataFormatada = dataVencimento.toISOString().split('T')[0];
              
              const formGroup = document.createElement('div');
              formGroup.className = 'form-group';
              formGroup.innerHTML = `
                <label for="vencimento_parcela_${i}">Vencimento Parcela ${i}</label>
                <input type="date" id="vencimento_parcela_${i}" name="vencimentos[]" value="${dataFormatada}" required class="form-control">
              `;
              container.appendChild(formGroup);
          }
      }
    }

    function toggleFields() {
        if (!tipoSelect) return;
        const tipo = tipoSelect.value;
        if (tipo === 'ENTRADA') {
            entradaFields.style.display = 'block';
            saidaFields.style.display = 'none';
            clienteNomeInput.required = false;
        } else if (tipo === 'SAIDA') {
            entradaFields.style.display = 'none';
            saidaFields.style.display = 'block';
            clienteNomeInput.required = true;
            gerarCamposDeVencimento();
        } else {
            entradaFields.style.display = 'none';
            saidaFields.style.display = 'none';
            clienteNomeInput.required = false;
        }
    }

    // Adiciona os "escutadores" de evento
    if (quantidadeInput) quantidadeInput.addEventListener('input', calcularValorTotal);
    if (precoUnitarioInput) precoUnitarioInput.addEventListener('input', calcularValorTotal);
    if (produtoSelect) produtoSelect.addEventListener('change', mostrarUnidade);
    if (tipoSelect) tipoSelect.addEventListener('change', toggleFields);
    if (parcelasInput) parcelasInput.addEventListener('input', gerarCamposDeVencimento);
    
    // Chama as fun√ß√µes no carregamento inicial
    toggleFields();
    mostrarUnidade();
  });
</script>
    
<%- include('partials/footer') %>