<%- include('partials/header', {
  titulo: 'Fluxo de Caixa',
  subtitulo: 'Controle suas entradas e saídas financeiras',
  user: locals.user
}) %>

<!-- CASH FLOW WORKSPACE - ENTERPRISE DESIGN -->
<div class="cash-flow-workspace">
  
  <!-- EXECUTIVE HEADER -->
  <div class="executive-header">
    <div class="header-content">
      <div class="header-main">
        <div class="title-section">
          <h1 class="executive-title">
            <svg class="title-icon" width="32" height="32" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M12 2v20M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"/>
            </svg>
            Controle Financeiro
          </h1>
          <p class="executive-subtitle">
            Gestão centralizada de entradas e saídas
            <% if (filtros.periodo !== 'mes-atual') { %>
              <span class="period-indicator">
                <% if (filtros.periodo === 'mes-passado') { %>Mês Anterior<% } %>
                <% if (filtros.periodo === 'ultimos-30') { %>Últimos 30 dias<% } %>
                <% if (filtros.periodo === 'custom') { %>
                  <%= new Date(filtros.data_inicio).toLocaleDateString('pt-BR') %> - <%= new Date(filtros.data_fim).toLocaleDateString('pt-BR') %>
                <% } %>
              </span>
            <% } %>
          </p>
        </div>
      </div>
      <div class="header-actions">
        <button type="button" class="btn-executive btn-primary" onclick="abrirModal()">
          <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <line x1="12" y1="5" x2="12" y2="19"></line>
            <line x1="5" y1="12" x2="19" y2="12"></line>
          </svg>
          Novo Lançamento
        </button>
      </div>
    </div>
  </div>

  <!-- FINANCIAL CONTROLS -->
  <div class="controls-panel">
    <div class="controls-content">
      <div class="control-group">
        <label class="control-label">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
            <line x1="16" y1="2" x2="16" y2="6"></line>
            <line x1="8" y1="2" x2="8" y2="6"></line>
            <line x1="3" y1="10" x2="21" y2="10"></line>
          </svg>
          Período
        </label>
        <select class="control-input" id="periodoSelect" onchange="aplicarFiltros()">
          <option value="mes-atual" <%= filtros.periodo === 'mes-atual' ? 'selected' : '' %>>Mês Atual</option>
          <option value="mes-passado" <%= filtros.periodo === 'mes-passado' ? 'selected' : '' %>>Mês Anterior</option>
          <option value="ultimos-30" <%= filtros.periodo === 'ultimos-30' ? 'selected' : '' %>>Últimos 30 dias</option>
          <option value="custom" <%= filtros.periodo === 'custom' ? 'selected' : '' %>>Período Personalizado</option>
        </select>
      </div>

      <div class="control-group custom-dates" id="customDateGroup" style="display: <%= filtros.periodo === 'custom' ? 'flex' : 'none' %>;">
        <div class="date-range">
          <label class="range-label">De:</label>
          <input type="date" class="control-input date-input" id="dataInicio" value="<%= filtros.data_inicio || '' %>">
        </div>
        <div class="date-range">
          <label class="range-label">Até:</label>
          <input type="date" class="control-input date-input" id="dataFim" value="<%= filtros.data_fim || '' %>">
        </div>
      </div>

      <div class="control-group">
        <label class="control-label">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <polygon points="22,3 2,3 10,12.46 10,19 14,21 14,12.46"></polygon>
          </svg>
          Tipo
        </label>
        <select class="control-input" id="tipoSelect" onchange="aplicarFiltros()">
          <option value="">Todos os tipos</option>
          <option value="CREDITO" <%= filtros.tipo === 'CREDITO' ? 'selected' : '' %>>Entradas</option>
          <option value="DEBITO" <%= filtros.tipo === 'DEBITO' ? 'selected' : '' %>>Saídas</option>
        </select>
      </div>

      <div class="control-group">
        <label class="control-label">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <circle cx="11" cy="11" r="8"></circle>
            <path d="m21 21-4.35-4.35"></path>
          </svg>
          Buscar
        </label>
        <input type="text" class="control-input" id="searchInput" placeholder="Descrição ou categoria..." value="<%= filtros.pesquisar || '' %>" onkeypress="if(event.key==='Enter') aplicarFiltros()">
      </div>

      <div class="control-actions">
        <button type="button" class="btn-control btn-primary" onclick="aplicarFiltros()">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <circle cx="11" cy="11" r="8"></circle>
            <path d="m21 21-4.35-4.35"></path>
          </svg>
          Filtrar
        </button>
        <button type="button" class="btn-control btn-secondary" onclick="limparFiltros()">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <line x1="18" y1="6" x2="6" y2="18"></line>
            <line x1="6" y1="6" x2="18" y2="18"></line>
          </svg>
          Limpar
        </button>
      </div>
    </div>
  </div>

  <!-- FINANCIAL METRICS -->
  <div class="metrics-dashboard">
    <div class="metric-card metric-revenue-open">
      <div class="metric-header">
        <div class="metric-icon">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M12 2v20M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"/>
          </svg>
        </div>
        <span class="metric-label">Receitas em Aberto</span>
      </div>
      <div class="metric-value metric-revenue">
        R$ <%= metricas.receitasAbertas.toLocaleString('pt-BR', {minimumFractionDigits: 2}) %>
      </div>
    </div>

    <div class="metric-card metric-revenue-realized">
      <div class="metric-header">
        <div class="metric-icon">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <polyline points="22,12 18,12 15,21 9,3 6,12 2,12"></polyline>
          </svg>
        </div>
        <span class="metric-label">Receitas Realizadas</span>
      </div>
      <div class="metric-value metric-revenue">
        R$ <%= metricas.receitasRealizadas.toLocaleString('pt-BR', {minimumFractionDigits: 2}) %>
      </div>
    </div>

    <div class="metric-card metric-expense-open">
      <div class="metric-header">
        <div class="metric-icon">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <line x1="12" y1="1" x2="12" y2="23"></line>
            <path d="m17 5-5 5 5 5"></path>
            <path d="m7 5-5 5 5 5"></path>
          </svg>
        </div>
        <span class="metric-label">Despesas em Aberto</span>
      </div>
      <div class="metric-value metric-expense">
        R$ <%= metricas.despesasAbertas.toLocaleString('pt-BR', {minimumFractionDigits: 2}) %>
      </div>
    </div>

    <div class="metric-card metric-expense-realized">
      <div class="metric-header">
        <div class="metric-icon">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <polyline points="23,6 13.5,15.5 8.5,10.5 1,18"></polyline>
            <polyline points="17,6 23,6 23,12"></polyline>
          </svg>
        </div>
        <span class="metric-label">Despesas Realizadas</span>
      </div>
      <div class="metric-value metric-expense">
        R$ <%= metricas.despesasRealizadas.toLocaleString('pt-BR', {minimumFractionDigits: 2}) %>
      </div>
    </div>

    <div class="metric-card metric-balance <%= metricas.saldoTotal >= 0 ? 'metric-positive' : 'metric-negative' %>">
      <div class="metric-header">
        <div class="metric-icon">
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <rect x="1" y="3" width="15" height="13"></rect>
            <polygon points="16,8 20,8 23,11 23,16 16,16 16,8"></polygon>
            <circle cx="5.5" cy="18.5" r="2.5"></circle>
            <circle cx="18.5" cy="18.5" r="2.5"></circle>
          </svg>
        </div>
        <span class="metric-label">Saldo Total</span>
      </div>
      <div class="metric-value <%= metricas.saldoTotal >= 0 ? 'metric-positive-value' : 'metric-negative-value' %>">
        R$ <%= metricas.saldoTotal.toLocaleString('pt-BR', {minimumFractionDigits: 2}) %>
      </div>
    </div>
  </div>

  <!-- TRANSACTIONS TABLE -->
  <div class="transactions-section">
    <div class="section-header">
      <div class="section-title">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
          <polyline points="14,2 14,8 20,8"></polyline>
          <line x1="16" y1="13" x2="8" y2="13"></line>
          <line x1="16" y1="17" x2="8" y2="17"></line>
          <polyline points="10,9 9,9 8,9"></polyline>
        </svg>
        Movimentações Financeiras
      </div>
      <div class="section-info">
        <% if (filtros.pesquisar || filtros.tipo || filtros.periodo !== 'mes-atual') { %>
          <span class="filter-indicator">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <polygon points="22,3 2,3 10,12.46 10,19 14,21 14,12.46"></polygon>
            </svg>
            Filtros aplicados
          </span>
        <% } %>
        <span class="record-count"><%= lancamentos.length %> registro(s)</span>
      </div>
    </div>

    <div class="table-container">
      <table class="financial-table">
        <thead>
          <tr>
            <th class="th-checkbox">
              <input type="checkbox" id="selectAll" class="table-checkbox" onchange="toggleSelectAll(this)">
            </th>
            <th class="th-date">Data</th>
            <th class="th-description">Descrição</th>
            <th class="th-category">Categoria</th>
            <th class="th-type">Tipo</th>
            <th class="th-amount">Valor</th>
            <th class="th-status">Status</th>
            <th class="th-actions">Ações</th>
          </tr>
        </thead>
        <tbody>
          <% if (lancamentos && lancamentos.length > 0) { %>
            <% lancamentos.forEach(item => { %>
              <tr class="transaction-row" data-id="<%= item.id %>">
                <td class="td-checkbox">
                  <input type="checkbox" class="table-checkbox item-checkbox" value="<%= item.id %>" onchange="updateBulkActions()">
                </td>
                <td class="td-date">
                  <%= new Date(item.data_operacao).toLocaleDateString('pt-BR', {timeZone: 'UTC'}) %>
                </td>
                <td class="td-description">
                  <div class="description-content">
                    <span class="description-main"><%= item.descricao %></span>
                    <% if (item.observacao) { %>
                      <span class="description-note"><%= item.observacao %></span>
                    <% } %>
                  </div>
                </td>
                <td class="td-category">
                  <span class="category-tag"><%= item.categoria_nome || 'Sem categoria' %></span>
                </td>
                <td class="td-type">
                  <span class="type-badge <%= item.tipo === 'CREDITO' ? 'type-credit' : 'type-debit' %>">
                    <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                      <% if (item.tipo === 'CREDITO') { %>
                        <polyline points="22,12 18,12 15,21 9,3 6,12 2,12"></polyline>
                      <% } else { %>
                        <polyline points="23,6 13.5,15.5 8.5,10.5 1,18"></polyline>
                      <% } %>
                    </svg>
                    <%= item.tipo === 'CREDITO' ? 'Entrada' : 'Saída' %>
                  </span>
                </td>
                <td class="td-amount">
                  <span class="amount-value <%= item.tipo === 'CREDITO' ? 'amount-credit' : 'amount-debit' %>">
                    <%= item.tipo === 'CREDITO' ? '+' : '-' %> R$ <%= parseFloat(item.valor).toLocaleString('pt-BR', {minimumFractionDigits: 2}) %>
                  </span>
                </td>
                <td class="td-status">
                  <span class="status-badge status-paid">
                    <svg width="12" height="12" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                      <polyline points="20,6 9,17 4,12"></polyline>
                    </svg>
                    Realizado
                  </span>
                </td>
                <td class="td-actions">
                  <div class="action-buttons">
                    <% if (item.descricao && (item.descricao.includes('Recebimento Parcela') || item.descricao.includes('Pagamento:'))) { %>
                      <form action="/fluxo-caixa/estornar/<%= item.id %>" method="POST" style="display: inline;" 
                            onsubmit="return confirm('⚠️ ATENÇÃO: Estornar este lançamento irá reverter o pagamento da conta associada. Continuar?');">
                        <button type="submit" class="btn-action btn-warning" title="Estornar lançamento">
                          <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <polyline points="1,4 1,10 7,10"></polyline>
                            <path d="M3.51,15a9,9,0,0,0,13.24,1.49,8.77,8.77,0,0,0,2.72-5.78"></path>
                          </svg>
                          Estornar
                        </button>
                      </form>
                    <% } else { %>
                      <form action="/fluxo-caixa/delete/<%= item.id %>" method="POST" style="display: inline;" 
                            onsubmit="return confirm('Confirma a exclusão deste lançamento?');">
                        <button type="submit" class="btn-action btn-danger" title="Excluir lançamento">
                          <svg width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                            <polyline points="3,6 5,6 21,6"></polyline>
                            <path d="m19,6v14a2,2,0,0,1-2,2H7a2,2,0,0,1-2-2V6m3,0V4a2,2,0,0,1,2-2h4a2,2,0,0,1,2,2v2"></path>
                          </svg>
                          Excluir
                        </button>
                      </form>
                    <% } %>
                  </div>
                </td>
              </tr>
            <% }) %>
          <% } else { %>
            <tr>
              <td colspan="8" class="empty-state">
                <div class="empty-content">
                  <svg width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="1">
                    <circle cx="12" cy="12" r="10"></circle>
                    <line x1="12" y1="8" x2="12" y2="12"></line>
                    <line x1="12" y1="16" x2="12.01" y2="16"></line>
                  </svg>
                  <span>Nenhuma movimentação encontrada</span>
                </div>
              </td>
            </tr>
          <% } %>
        </tbody>
      </table>
    </div>
  </div>
</div>

<!-- BULK ACTIONS BAR -->
<div class="bulk-actions-bar" id="bulkActionsBar">
  <div class="bulk-count">
    <span id="selectedCount">0</span> item(s) selecionado(s)
  </div>
  <div class="bulk-actions">
    <button class="btn-bulk btn-bulk-cancel" onclick="clearSelection()">
      Cancelar
    </button>
    <button class="btn-bulk btn-bulk-delete" onclick="showDeleteConfirmation()">
      <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <polyline points="3,6 5,6 21,6"></polyline>
        <path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path>
      </svg>
      Excluir Selecionados
    </button>
  </div>
</div>

<!-- CONFIRMATION MODAL -->
<div class="modal-overlay-bulk" id="confirmModal">
  <div class="modal-content-bulk">
    <div class="modal-header-bulk">
      <div class="modal-icon-bulk">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <circle cx="12" cy="12" r="10"></circle>
          <line x1="12" y1="8" x2="12" y2="12"></line>
          <line x1="12" y1="16" x2="12.01" y2="16"></line>
        </svg>
      </div>
      <div class="modal-title-bulk">Confirmar Exclusão em Massa</div>
    </div>
    <div class="modal-body-bulk">
      <p>Você está prestes a excluir <strong id="confirmCount">0</strong> lançamento(s) do fluxo de caixa.</p>
      <div class="modal-warning-bulk">
        ⚠️ <strong>Atenção:</strong> Lançamentos vinculados a contas a receber/pagar não serão excluídos e você receberá um relatório detalhado.
      </div>
    </div>
    <div class="modal-actions-bulk">
      <button class="btn-modal-bulk btn-modal-cancel-bulk" onclick="closeConfirmModal()">
        Cancelar
      </button>
      <button class="btn-modal-bulk btn-modal-confirm-bulk" onclick="executeBulkDelete()">
        Confirmar Exclusão
      </button>
    </div>
  </div>
</div>

<!-- RESULTS MODAL -->
<div class="modal-overlay-bulk" id="resultsModal">
  <div class="modal-content-bulk">
    <div class="modal-header-bulk">
      <div class="modal-title-bulk">Resultado da Exclusão</div>
    </div>
    <div class="modal-body-bulk">
      <p><strong>Total processado:</strong> <span id="resultTotal">0</span></p>
      <p><strong>Excluídos com sucesso:</strong> <span id="resultSuccess" style="color: #10b981;">0</span></p>
      <p><strong>Bloqueados (vinculados):</strong> <span id="resultBlocked" style="color: #f59e0b;">0</span></p>
      <p><strong>Erros:</strong> <span id="resultErrors" style="color: #ef4444;">0</span></p>
      <div class="results-list" id="resultsList"></div>
    </div>
    <div class="modal-actions-bulk">
      <button class="btn-modal-bulk btn-modal-cancel-bulk" onclick="closeResultsModal()">
        Fechar
      </button>
    </div>
  </div>
</div>

<!-- TRANSACTION MODAL -->
<div class="modal-overlay" id="modalLancamento">
  <div class="modal-container">
    <div class="modal-header">
      <h3 class="modal-title">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <line x1="12" y1="5" x2="12" y2="19"></line>
          <line x1="5" y1="12" x2="19" y2="12"></line>
        </svg>
        Novo Lançamento Financeiro
      </h3>
      <button type="button" class="modal-close" onclick="fecharModal()">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <line x1="18" y1="6" x2="6" y2="18"></line>
          <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
      </button>
    </div>
    
    <form action="/fluxo-caixa/lancamento" method="POST">
      <div class="modal-body">
        <div class="form-row">
          <div class="form-field">
            <label class="field-label">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                <line x1="16" y1="2" x2="16" y2="6"></line>
                <line x1="8" y1="2" x2="8" y2="6"></line>
                <line x1="3" y1="10" x2="21" y2="10"></line>
              </svg>
              Data da Operação
            </label>
            <input type="date" class="field-input" name="data_operacao" value="<%= hoje %>" required>
          </div>
          
          <div class="form-field">
            <label class="field-label">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <polyline points="6,9 12,15 18,9"></polyline>
              </svg>
              Tipo de Movimento
            </label>
            <select class="field-input" name="tipo" required>
              <option value="">Selecione o tipo...</option>
              <option value="CREDITO">Entrada (Crédito)</option>
              <option value="DEBITO">Saída (Débito)</option>
            </select>
          </div>
        </div>

        <div class="form-row">
          <div class="form-field">
            <label class="field-label">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M12 2v20M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"/>
              </svg>
              Valor (R$)
            </label>
            <input type="number" class="field-input" name="valor" step="0.01" min="0.01" placeholder="0,00" required>
          </div>
          
          <div class="form-field">
            <label class="field-label">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"></path>
                <rect x="8" y="2" width="8" height="4" rx="1" ry="1"></rect>
              </svg>
              Categoria
            </label>
            <select class="field-input" name="categoria_id" required>
              <option value="">Selecione uma categoria...</option>
              <% categorias.forEach(cat => { %>
                <option value="<%= cat.id %>"><%= cat.nome %></option>
              <% }) %>
            </select>
          </div>
        </div>

        <div class="form-field full-width">
          <label class="field-label">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
              <polyline points="14,2 14,8 20,8"></polyline>
              <line x1="16" y1="13" x2="8" y2="13"></line>
              <line x1="16" y1="17" x2="8" y2="17"></line>
            </svg>
            Descrição
          </label>
          <input type="text" class="field-input" name="descricao" placeholder="Descreva a movimentação financeira..." required>
        </div>
      </div>
      
      <div class="modal-footer">
        <button type="button" class="btn-modal btn-secondary" onclick="fecharModal()">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <line x1="18" y1="6" x2="6" y2="18"></line>
            <line x1="6" y1="6" x2="18" y2="18"></line>
          </svg>
          Cancelar
        </button>
        <button type="submit" class="btn-modal btn-primary">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <path d="M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"></path>
            <polyline points="17,21 17,13 7,13 7,21"></polyline>
            <polyline points="7,3 7,8 15,8"></polyline>
          </svg>
          Salvar Lançamento
        </button>
      </div>
    </form>
  </div>
</div>

<style>
/* ENTERPRISE CASH FLOW DESIGN SYSTEM */
:root {
  --primary-color: #1e40af;
  --primary-hover: #1d4ed8;
  --secondary-color: #6b7280;
  --success-color: #059669;
  --warning-color: #d97706;
  --danger-color: #dc2626;
  --surface-color: #ffffff;
  --background-color: #f8fafc;
  --border-color: #e5e7eb;
  --text-primary: #111827;
  --text-secondary: #6b7280;
  --text-muted: #9ca3af;
  --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
  --radius-sm: 6px;
  --radius-md: 8px;
  --radius-lg: 12px;
}

/* WORKSPACE LAYOUT */
.cash-flow-workspace {
  max-width: 1400px;
  margin: 0 auto;
  padding: 32px;
  background: var(--background-color);
  min-height: calc(100vh - 120px);
}

/* EXECUTIVE HEADER */
.executive-header {
  background: var(--surface-color);
  border-radius: var(--radius-lg);
  padding: 32px;
  margin-bottom: 32px;
  box-shadow: var(--shadow-sm);
  border: 1px solid var(--border-color);
}

.header-content {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 24px;
}

.title-section {
  flex: 1;
}

.executive-title {
  font-size: 32px;
  font-weight: 700;
  color: var(--text-primary);
  margin-bottom: 8px;
  display: flex;
  align-items: center;
  gap: 16px;
}

.title-icon {
  color: var(--primary-color);
  flex-shrink: 0;
}

.executive-subtitle {
  font-size: 16px;
  color: var(--text-secondary);
  line-height: 1.5;
}

.period-indicator {
  display: inline-flex;
  align-items: center;
  gap: 4px;
  padding: 4px 12px;
  background: #dbeafe;
  color: var(--primary-color);
  border-radius: var(--radius-sm);
  font-size: 14px;
  font-weight: 500;
  margin-left: 12px;
}

.header-actions {
  display: flex;
  gap: 12px;
}

/* BUTTONS */
.btn-executive {
  display: inline-flex;
  align-items: center;
  gap: 8px;
  padding: 12px 24px;
  border: none;
  border-radius: var(--radius-md);
  font-size: 14px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
  text-decoration: none;
  white-space: nowrap;
}

.btn-primary {
  background: var(--primary-color);
  color: white;
}

.btn-primary:hover {
  background: var(--primary-hover);
  transform: translateY(-1px);
  box-shadow: var(--shadow-md);
}

.btn-secondary {
  background: #f3f4f6;
  color: var(--text-secondary);
  border: 1px solid var(--border-color);
}

.btn-secondary:hover {
  background: #e5e7eb;
  color: var(--text-primary);
}

/* CONTROLS PANEL */
.controls-panel {
  background: var(--surface-color);
  border-radius: var(--radius-lg);
  padding: 24px;
  margin-bottom: 32px;
  box-shadow: var(--shadow-sm);
  border: 1px solid var(--border-color);
}

.controls-content {
  display: flex;
  align-items: end;
  gap: 20px;
  flex-wrap: wrap;
}

.control-group {
  display: flex;
  flex-direction: column;
  gap: 6px;
  min-width: 180px;
}

.control-group.custom-dates {
  flex-direction: row;
  align-items: end;
  gap: 12px;
  background: #f8fafc;
  padding: 12px;
  border-radius: var(--radius-md);
  border: 1px solid var(--border-color);
}

.date-range {
  display: flex;
  flex-direction: column;
  gap: 4px;
}

.control-label {
  font-size: 14px;
  font-weight: 500;
  color: var(--text-primary);
  display: flex;
  align-items: center;
  gap: 6px;
}

.range-label {
  font-size: 12px;
  font-weight: 500;
  color: var(--text-secondary);
}

.control-input {
  padding: 10px 12px;
  border: 1px solid var(--border-color);
  border-radius: var(--radius-sm);
  font-size: 14px;
  background: var(--surface-color);
  color: var(--text-primary);
  transition: border-color 0.2s ease;
}

.control-input:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 3px rgba(30, 64, 175, 0.1);
}

.date-input {
  min-width: 140px;
}

.control-actions {
  display: flex;
  gap: 8px;
  margin-left: auto;
}

.btn-control {
  display: inline-flex;
  align-items: center;
  gap: 6px;
  padding: 10px 16px;
  border: none;
  border-radius: var(--radius-sm);
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
}

/* METRICS DASHBOARD */
.metrics-dashboard {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
  gap: 24px;
  margin-bottom: 32px;
}

.metric-card {
  background: var(--surface-color);
  border-radius: var(--radius-lg);
  padding: 24px;
  box-shadow: var(--shadow-sm);
  border: 1px solid var(--border-color);
  transition: all 0.2s ease;
  position: relative;
  overflow: hidden;
}

.metric-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 4px;
}

.metric-card:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-lg);
}

.metric-revenue-open::before { background: linear-gradient(90deg, #06b6d4, #0891b2); }
.metric-revenue-realized::before { background: linear-gradient(90deg, #059669, #047857); }
.metric-expense-open::before { background: linear-gradient(90deg, #d97706, #b45309); }
.metric-expense-realized::before { background: linear-gradient(90deg, #dc2626, #b91c1c); }
.metric-balance::before { background: linear-gradient(90deg, #7c3aed, #6d28d9); }
.metric-negative::before { background: linear-gradient(90deg, #dc2626, #b91c1c); }

.metric-header {
  display: flex;
  align-items: center;
  gap: 12px;
  margin-bottom: 16px;
}

.metric-icon {
  width: 40px;
  height: 40px;
  border-radius: var(--radius-md);
  background: #f3f4f6;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--text-secondary);
}

.metric-label {
  font-size: 14px;
  font-weight: 500;
  color: var(--text-secondary);
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.metric-value {
  font-size: 28px;
  font-weight: 700;
  color: var(--text-primary);
}

.metric-revenue { color: var(--success-color); }
.metric-expense { color: var(--danger-color); }
.metric-positive-value { color: var(--success-color); }
.metric-negative-value { color: var(--danger-color); }

/* TRANSACTIONS SECTION */
.transactions-section {
  background: var(--surface-color);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-sm);
  border: 1px solid var(--border-color);
  overflow: hidden;
}

.section-header {
  padding: 24px;
  border-bottom: 1px solid var(--border-color);
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: #f8fafc;
}

.section-title {
  font-size: 20px;
  font-weight: 600;
  color: var(--text-primary);
  display: flex;
  align-items: center;
  gap: 12px;
}

.section-info {
  display: flex;
  align-items: center;
  gap: 16px;
}

.filter-indicator {
  display: inline-flex;
  align-items: center;
  gap: 6px;
  padding: 6px 12px;
  background: #dbeafe;
  color: var(--primary-color);
  border-radius: var(--radius-sm);
  font-size: 12px;
  font-weight: 500;
}

.record-count {
  font-size: 14px;
  color: var(--text-secondary);
}

.table-container {
  overflow-x: auto;
}

.financial-table {
  width: 100%;
  border-collapse: collapse;
}

.financial-table th {
  background: #f8fafc;
  padding: 16px;
  text-align: left;
  font-size: 12px;
  font-weight: 600;
  color: var(--text-secondary);
  text-transform: uppercase;
  letter-spacing: 0.5px;
  border-bottom: 1px solid var(--border-color);
  white-space: nowrap;
}

.financial-table td {
  padding: 16px;
  border-bottom: 1px solid #f1f5f9;
  vertical-align: middle;
}

.transaction-row:hover {
  background: #f8fafc;
}

.transaction-row.selected {
  background: #dbeafe !important;
}

.td-date {
  font-size: 14px;
  color: var(--text-secondary);
  min-width: 100px;
}

.description-content {
  display: flex;
  flex-direction: column;
  gap: 4px;
}

.description-main {
  font-weight: 500;
  color: var(--text-primary);
}

.description-note {
  font-size: 12px;
  color: var(--text-muted);
}

.category-tag {
  display: inline-flex;
  align-items: center;
  padding: 4px 8px;
  background: #f3f4f6;
  color: var(--text-secondary);
  border-radius: var(--radius-sm);
  font-size: 12px;
  font-weight: 500;
}

.type-badge {
  display: inline-flex;
  align-items: center;
  gap: 6px;
  padding: 6px 12px;
  border-radius: var(--radius-sm);
  font-size: 12px;
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.type-credit {
  background: #dcfce7;
  color: #166534;
}

.type-debit {
  background: #fef2f2;
  color: #991b1b;
}

.amount-value {
  font-size: 16px;
  font-weight: 600;
  text-align: right;
}

.amount-credit { color: var(--success-color); }
.amount-debit { color: var(--danger-color); }

.status-badge {
  display: inline-flex;
  align-items: center;
  gap: 6px;
  padding: 6px 12px;
  border-radius: var(--radius-sm);
  font-size: 12px;
  font-weight: 500;
}

.status-paid {
  background: #dcfce7;
  color: #166534;
}

.action-buttons {
  display: flex;
  gap: 6px;
  justify-content: flex-end;
}

.btn-action {
  display: inline-flex;
  align-items: center;
  gap: 4px;
  padding: 6px 10px;
  border: none;
  border-radius: var(--radius-sm);
  font-size: 12px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  text-decoration: none;
}

.btn-warning {
  background: #fef3c7;
  color: #92400e;
}

.btn-warning:hover {
  background: #fde68a;
  color: #78350f;
}

.btn-danger {
  background: #fef2f2;
  color: #991b1b;
}

.btn-danger:hover {
  background: #fecaca;
  color: #7f1d1d;
}

.empty-state {
  text-align: center;
  padding: 64px 32px;
}

.empty-content {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 16px;
  color: var(--text-muted);
}

/* CHECKBOX STYLES */
.table-checkbox {
  width: 18px;
  height: 18px;
  cursor: pointer;
  accent-color: var(--primary-color);
}

.th-checkbox {
  width: 50px;
  text-align: center;
}

.td-checkbox {
  text-align: center;
}

/* BULK ACTIONS BAR */
.bulk-actions-bar {
  position: fixed;
  bottom: 24px;
  left: 50%;
  transform: translateX(-50%) translateY(100px);
  background: var(--primary-color);
  color: white;
  padding: 16px 24px;
  border-radius: var(--radius-lg);
  box-shadow: 0 10px 25px rgba(0,0,0,0.3);
  display: flex;
  align-items: center;
  gap: 16px;
  z-index: 1000;
  opacity: 0;
  pointer-events: none;
  transition: all 0.3s ease;
}

.bulk-actions-bar.active {
  transform: translateX(-50%) translateY(0);
  opacity: 1;
  pointer-events: all;
}

.bulk-count {
  font-weight: 600;
  font-size: 15px;
}

.bulk-actions {
  display: flex;
  gap: 12px;
  margin-left: 8px;
}

.btn-bulk {
  padding: 8px 16px;
  border-radius: var(--radius-sm);
  border: none;
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s;
  display: flex;
  align-items: center;
  gap: 6px;
}

.btn-bulk-cancel {
  background: rgba(255,255,255,0.2);
  color: white;
}

.btn-bulk-cancel:hover {
  background: rgba(255,255,255,0.3);
}

.btn-bulk-delete {
  background: var(--danger-color);
  color: white;
}

.btn-bulk-delete:hover {
  background: #dc2626;
}

/* BULK MODALS */
.modal-overlay-bulk {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0,0,0,0.5);
  z-index: 2000;
  display: none;
  align-items: center;
  justify-content: center;
}

.modal-overlay-bulk.active {
  display: flex;
}

.modal-content-bulk {
  background: white;
  border-radius: var(--radius-lg);
  padding: 32px;
  max-width: 500px;
  width: 90%;
  box-shadow: 0 20px 50px rgba(0,0,0,0.3);
}

.modal-header-bulk {
  display: flex;
  align-items: center;
  gap: 12px;
  margin-bottom: 16px;
}

.modal-icon-bulk {
  width: 48px;
  height: 48px;
  background: #fee2e2;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--danger-color);
}

.modal-title-bulk {
  font-size: 20px;
  font-weight: 600;
  color: var(--text-primary);
}

.modal-body-bulk {
  margin-bottom: 24px;
  color: var(--text-secondary);
  line-height: 1.6;
}

.modal-warning-bulk {
  background: #fef3c7;
  border-left: 4px solid var(--warning-color);
  padding: 12px 16px;
  border-radius: var(--radius-sm);
  margin-top: 16px;
  font-size: 14px;
}

.modal-actions-bulk {
  display: flex;
  gap: 12px;
  justify-content: flex-end;
}

.btn-modal-bulk {
  padding: 10px 20px;
  border-radius: var(--radius-sm);
  border: none;
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s;
}

.btn-modal-cancel-bulk {
  background: #f1f5f9;
  color: var(--text-primary);
}

.btn-modal-cancel-bulk:hover {
  background: #e2e8f0;
}

.btn-modal-confirm-bulk {
  background: var(--danger-color);
  color: white;
}

.btn-modal-confirm-bulk:hover {
  background: #dc2626;
}

.results-list {
  max-height: 300px;
  overflow-y: auto;
  margin-top: 16px;
}

.result-item {
  padding: 12px;
  border-radius: var(--radius-sm);
  margin-bottom: 8px;
  display: flex;
  align-items: center;
  gap: 12px;
  font-size: 14px;
}

.result-item.success {
  background: #dcfce7;
  color: #166534;
}

.result-item.blocked {
  background: #fef3c7;
  color: #92400e;
}

.result-item.error {
  background: #fee2e2;
  color: #991b1b;
}

.result-icon {
  flex-shrink: 0;
}

/* MODAL */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: none;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  padding: 20px;
}

.modal-overlay.active {
  display: flex;
}

.modal-container {
  background: var(--surface-color);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-lg);
  width: 100%;
  max-width: 600px;
  max-height: 90vh;
  overflow: hidden;
}

.modal-header {
  padding: 24px;
  border-bottom: 1px solid var(--border-color);
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: #f8fafc;
}

.modal-title {
  font-size: 20px;
  font-weight: 600;
  color: var(--text-primary);
  display: flex;
  align-items: center;
  gap: 12px;
}

.modal-close {
  background: none;
  border: none;
  color: var(--text-secondary);
  cursor: pointer;
  padding: 4px;
  border-radius: var(--radius-sm);
  transition: all 0.2s ease;
}

.modal-close:hover {
  background: #e5e7eb;
  color: var(--text-primary);
}

.modal-body {
  padding: 24px;
}

.form-row {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 20px;
  margin-bottom: 20px;
}

.form-field {
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.form-field.full-width {
  grid-column: 1 / -1;
}

.field-label {
  font-size: 14px;
  font-weight: 500;
  color: var(--text-primary);
  display: flex;
  align-items: center;
  gap: 6px;
}

.field-input {
  padding: 12px;
  border: 1px solid var(--border-color);
  border-radius: var(--radius-sm);
  font-size: 14px;
  transition: border-color 0.2s ease;
}

.field-input:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 3px rgba(30, 64, 175, 0.1);
}

.modal-footer {
  padding: 20px 24px;
  border-top: 1px solid var(--border-color);
  display: flex;
  justify-content: flex-end;
  gap: 12px;
  background: #f8fafc;
}

.btn-modal {
  display: inline-flex;
  align-items: center;
  gap: 8px;
  padding: 10px 20px;
  border: none;
  border-radius: var(--radius-sm);
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
}

/* RESPONSIVE DESIGN */
@media (max-width: 1024px) {
  .cash-flow-workspace {
    padding: 20px;
  }
  
  .controls-content {
    flex-direction: column;
    align-items: stretch;
  }
  
  .control-group {
    min-width: auto;
  }
  
  .metrics-dashboard {
    grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
    gap: 16px;
  }
}

@media (max-width: 768px) {
  .cash-flow-workspace {
    padding: 16px;
  }
  
  .header-content {
    flex-direction: column;
    gap: 16px;
    text-align: center;
  }
  
  .executive-title {
    font-size: 24px;
  }
  
  .metrics-dashboard {
    grid-template-columns: 1fr;
  }
  
  .form-row {
    grid-template-columns: 1fr;
  }
  
  .section-header {
    flex-direction: column;
    gap: 12px;
    text-align: center;
  }
  
  .financial-table {
    font-size: 14px;
  }
  
  .financial-table th,
  .financial-table td {
    padding: 12px 8px;
  }
}
</style>

<script>
// CASH FLOW MANAGEMENT FUNCTIONS

function abrirModal() {
  document.getElementById('modalLancamento').classList.add('active');
  document.body.style.overflow = 'hidden';
}

function fecharModal() {
  document.getElementById('modalLancamento').classList.remove('active');
  document.body.style.overflow = 'auto';
}

function aplicarFiltros() {
  const periodo = document.getElementById('periodoSelect').value;
  const pesquisar = document.getElementById('searchInput').value;
  const tipo = document.getElementById('tipoSelect').value;
  
  let url = '/fluxo-caixa?';
  const params = [];
  
  if (periodo) params.push(`periodo=${periodo}`);
  if (pesquisar) params.push(`pesquisar=${encodeURIComponent(pesquisar)}`);
  if (tipo) params.push(`tipo=${tipo}`);
  
  if (periodo === 'custom') {
    const dataInicio = document.getElementById('dataInicio').value;
    const dataFim = document.getElementById('dataFim').value;
    if (dataInicio) params.push(`data_inicio=${dataInicio}`);
    if (dataFim) params.push(`data_fim=${dataFim}`);
  }
  
  window.location.href = url + params.join('&');
}

function limparFiltros() {
  document.getElementById('periodoSelect').value = 'mes-atual';
  document.getElementById('searchInput').value = '';
  document.getElementById('tipoSelect').value = '';
  document.getElementById('dataInicio').value = '';
  document.getElementById('dataFim').value = '';
  aplicarFiltros();
}

// Show/hide custom date fields
document.getElementById('periodoSelect').addEventListener('change', function() {
  const customGroup = document.getElementById('customDateGroup');
  if (this.value === 'custom') {
    customGroup.style.display = 'flex';
  } else {
    customGroup.style.display = 'none';
  }
});

// Close modal on overlay click
document.getElementById('modalLancamento').addEventListener('click', function(e) {
  if (e.target === this) {
    fecharModal();
  }
});

// Form validation
document.querySelector('#modalLancamento form').addEventListener('submit', function(e) {
  const valor = document.querySelector('input[name="valor"]').value;
  const tipo = document.querySelector('select[name="tipo"]').value;
  const descricao = document.querySelector('input[name="descricao"]').value;
  
  if (!valor || !tipo || !descricao) {
    e.preventDefault();
    alert('Por favor, preencha todos os campos obrigatórios.');
  }
});

// Auto-focus modal inputs
function abrirModal() {
  document.getElementById('modalLancamento').classList.add('active');
  document.body.style.overflow = 'hidden';
  setTimeout(() => {
    document.querySelector('input[name="data_operacao"]').focus();
  }, 100);
}

// BULK DELETE FUNCTIONS
function updateBulkActions() {
  const checkboxes = document.querySelectorAll('.item-checkbox:checked');
  const count = checkboxes.length;
  const bar = document.getElementById('bulkActionsBar');
  const countElement = document.getElementById('selectedCount');
  
  countElement.textContent = count;
  
  if (count > 0) {
    bar.classList.add('active');
    checkboxes.forEach(cb => {
      cb.closest('.transaction-row').classList.add('selected');
    });
  } else {
    bar.classList.remove('active');
    document.querySelectorAll('.transaction-row').forEach(row => {
      row.classList.remove('selected');
    });
  }
  
  const allCheckboxes = document.querySelectorAll('.item-checkbox');
  const selectAllCheckbox = document.getElementById('selectAll');
  selectAllCheckbox.checked = allCheckboxes.length > 0 && count === allCheckboxes.length;
}

function toggleSelectAll(checkbox) {
  const itemCheckboxes = document.querySelectorAll('.item-checkbox');
  itemCheckboxes.forEach(cb => {
    cb.checked = checkbox.checked;
  });
  updateBulkActions();
}

function clearSelection() {
  document.querySelectorAll('.item-checkbox').forEach(cb => {
    cb.checked = false;
  });
  document.getElementById('selectAll').checked = false;
  updateBulkActions();
}

function showDeleteConfirmation() {
  const count = document.querySelectorAll('.item-checkbox:checked').length;
  document.getElementById('confirmCount').textContent = count;
  document.getElementById('confirmModal').classList.add('active');
}

function closeConfirmModal() {
  document.getElementById('confirmModal').classList.remove('active');
}

async function executeBulkDelete() {
  const checkboxes = document.querySelectorAll('.item-checkbox:checked');
  const ids = Array.from(checkboxes).map(cb => cb.value);
  
  closeConfirmModal();
  
  try {
    const response = await fetch('/fluxo-caixa/bulk-delete', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ ids })
    });
    
    const data = await response.json();
    
    if (data.success) {
      showResults(data.resultados);
      
      setTimeout(() => {
        window.location.href = window.location.href;
      }, 3000);
    } else {
      alert('Erro: ' + data.message);
    }
  } catch (error) {
    alert('Erro ao processar exclusão: ' + error.message);
  }
}

function showResults(resultados) {
  document.getElementById('resultTotal').textContent = resultados.total;
  document.getElementById('resultSuccess').textContent = resultados.excluidos;
  document.getElementById('resultBlocked').textContent = resultados.bloqueados;
  document.getElementById('resultErrors').textContent = resultados.erros;
  
  const listContainer = document.getElementById('resultsList');
  listContainer.innerHTML = '';
  
  resultados.detalhes.forEach(detalhe => {
    const item = document.createElement('div');
    item.className = `result-item ${detalhe.status === 'excluido' ? 'success' : detalhe.status === 'bloqueado' ? 'blocked' : 'error'}`;
    
    const icon = detalhe.status === 'excluido' ? '✓' : detalhe.status === 'bloqueado' ? '⚠' : '✕';
    const text = detalhe.status === 'excluido' ? 'Excluído' : detalhe.status === 'bloqueado' ? 'Bloqueado: ' + detalhe.motivo : 'Erro: ' + detalhe.motivo;
    
    item.innerHTML = `
      <span class="result-icon">${icon}</span>
      <span>ID ${detalhe.id}: ${text}</span>
    `;
    
    listContainer.appendChild(item);
  });
  
  document.getElementById('resultsModal').classList.add('active');
}

function closeResultsModal() {
  document.getElementById('resultsModal').classList.remove('active');
}

document.querySelectorAll('.modal-overlay-bulk').forEach(modal => {
  modal.addEventListener('click', (e) => {
    if (e.target === modal) {
      modal.classList.remove('active');
    }
  });
});
</script>

<%- include('partials/footer') %>