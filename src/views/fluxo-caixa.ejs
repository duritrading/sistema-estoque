<%- include('partials/header', {
  titulo: 'Fluxo de Caixa',
  subtitulo: 'Controle suas entradas e sa√≠das financeiras',
  user: locals.user
}) %>

<style>
/* Estilos espec√≠ficos para o Fluxo de Caixa moderno */
.page-header {
    background: white;
    padding: 24px;
    border-radius: 12px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    margin-bottom: 20px;
}

.page-title {
    font-size: 28px;
    font-weight: 600;
    color: #1e293b;
    margin-bottom: 8px;
    display: flex;
    align-items: center;
    gap: 12px;
}

.page-subtitle {
    color: #64748b;
    font-size: 16px;
}

/* Filtros */
.filters-section {
    background: white;
    padding: 20px 24px;
    border-radius: 12px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    margin-bottom: 20px;
}

.filters-row {
    display: flex;
    gap: 16px;
    align-items: center;
    flex-wrap: wrap;
}

.filter-group {
    display: flex;
    align-items: center;
    gap: 8px;
    flex-wrap: wrap;
}

#customDateGroup {
    background: #f8fafc;
    padding: 8px 12px;
    border-radius: 6px;
    border: 1px solid #e2e8f0;
}

.filter-label {
    font-size: 14px;
    font-weight: 500;
    color: #475569;
    white-space: nowrap;
}

.filter-input, .filter-select {
    padding: 8px 12px;
    border: 1px solid #d1d5db;
    border-radius: 6px;
    font-size: 14px;
    min-width: 140px;
}

.filter-input:focus, .filter-select:focus {
    outline: none;
    border-color: #3b82f6;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

/* M√©tricas Cards - Novo design */
.metrics-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
    gap: 16px;
    margin-bottom: 20px;
}

.metric-card {
    background: white;
    padding: 20px;
    border-radius: 12px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    border-left: 4px solid;
    transition: transform 0.2s;
}

.metric-card:hover {
    transform: translateY(-2px);
}

.metric-card.receitas-abertas {
    border-left-color: #06b6d4;
}

.metric-card.receitas-realizadas {
    border-left-color: #10b981;
}

.metric-card.despesas-abertas {
    border-left-color: #f59e0b;
}

.metric-card.despesas-realizadas {
    border-left-color: #ef4444;
}

.metric-card.total-periodo {
    border-left-color: #6366f1;
}

.metric-label {
    font-size: 13px;
    color: #64748b;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    margin-bottom: 8px;
    font-weight: 500;
}

.metric-value {
    font-size: 24px;
    font-weight: 700;
    color: #1e293b;
}

.metric-value.positive {
    color: #10b981;
}

.metric-value.negative {
    color: #ef4444;
}

/* Tabela moderna */
.table-section {
    background: white;
    border-radius: 12px;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    overflow: hidden;
}

.table-header {
    padding: 20px 24px;
    border-bottom: 1px solid #e2e8f0;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.table-title {
    font-size: 18px;
    font-weight: 600;
    color: #1e293b;
}

.data-table {
    width: 100%;
    border-collapse: collapse;
}

.data-table th {
    background: #f8fafc;
    padding: 12px 16px;
    text-align: left;
    font-size: 12px;
    font-weight: 600;
    color: #475569;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    border-bottom: 1px solid #e2e8f0;
}

.data-table td {
    padding: 16px;
    border-bottom: 1px solid #f1f5f9;
    vertical-align: middle;
}

.data-table tbody tr:hover {
    background: #f8fafc;
}

/* Status badges */
.status-badge {
    padding: 4px 12px;
    border-radius: 16px;
    font-size: 12px;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.status-pago {
    background: #dcfce7;
    color: #166534;
}

.status-pendente {
    background: #fef3c7;
    color: #92400e;
}

/* Valores */
.valor-positivo {
    color: #10b981;
    font-weight: 600;
}

.valor-negativo {
    color: #ef4444;
    font-weight: 600;
}

/* Modal */
.modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0,0,0,0.5);
    z-index: 1000;
}

.modal-content {
    background: white;
    margin: 5% auto;
    padding: 0;
    border-radius: 12px;
    width: 90%;
    max-width: 500px;
    box-shadow: 0 20px 25px -5px rgba(0,0,0,0.1);
}

.modal-header {
    padding: 20px 24px;
    border-bottom: 1px solid #e2e8f0;
}

.modal-title {
    font-size: 18px;
    font-weight: 600;
    color: #1e293b;
}

.modal-body {
    padding: 24px;
}

.form-group {
    margin-bottom: 16px;
}

.form-label {
    display: block;
    margin-bottom: 6px;
    font-size: 14px;
    font-weight: 500;
    color: #374151;
}

.form-input, .form-select, .form-textarea {
    width: 100%;
    padding: 10px 12px;
    border: 1px solid #d1d5db;
    border-radius: 6px;
    font-size: 14px;
}

.form-input:focus, .form-select:focus, .form-textarea:focus {
    outline: none;
    border-color: #3b82f6;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

.modal-footer {
    padding: 16px 24px;
    border-top: 1px solid #e2e8f0;
    display: flex;
    justify-content: flex-end;
    gap: 12px;
}

.btn-modern {
    padding: 8px 16px;
    border: none;
    border-radius: 6px;
    font-size: 14px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.2s;
    display: inline-flex;
    align-items: center;
    gap: 6px;
}

.btn-primary {
    background: #3b82f6;
    color: white;
}

.btn-primary:hover {
    background: #2563eb;
}

.btn-success {
    background: #10b981;
    color: white;
}

.btn-success:hover {
    background: #059669;
}

.btn-secondary {
    background: #f1f5f9;
    color: #475569;
}

.btn-secondary:hover {
    background: #e2e8f0;
}

.btn-danger {
    background: #ef4444;
    color: white;
    padding: 4px 8px;
    font-size: 12px;
}

.btn-danger:hover {
    background: #dc2626;
}

/* Responsividade */
@media (max-width: 768px) {
    .metrics-grid {
        grid-template-columns: 1fr;
    }
    
    .filters-row {
        flex-direction: column;
        align-items: stretch;
    }
    
    .filter-group {
        flex-direction: column;
        align-items: stretch;
    }
    
    .data-table {
        font-size: 14px;
    }
    
    .data-table th,
    .data-table td {
        padding: 8px;
    }
}
</style>

<!-- Header -->
<div class="page-header">
  <h1 class="page-title">
    üí∞ Fluxo de Caixa
  </h1>
  <p class="page-subtitle">
    Controle suas entradas e sa√≠das financeiras
    <% if (filtros.periodo !== 'mes-atual') { %>
      <span style="color: #3b82f6; font-weight: 600;">
        - 
        <% if (filtros.periodo === 'mes-passado') { %>M√™s Passado<% } %>
        <% if (filtros.periodo === 'ultimos-30') { %>√öltimos 30 dias<% } %>
        <% if (filtros.periodo === 'custom') { %>Per√≠odo: <%= new Date(filtros.data_inicio).toLocaleDateString('pt-BR') %> a <%= new Date(filtros.data_fim).toLocaleDateString('pt-BR') %><% } %>
      </span>
    <% } %>
  </p>
</div>

<!-- Filtros -->
<div class="filters-section">
  <div class="filters-row">
    <div class="filter-group">
      <span class="filter-label">Per√≠odo:</span>
      <select class="filter-select" id="periodoSelect">
        <option value="mes-atual" <%= filtros.periodo === 'mes-atual' ? 'selected' : '' %>>M√™s Atual</option>
        <option value="mes-passado" <%= filtros.periodo === 'mes-passado' ? 'selected' : '' %>>M√™s Passado</option>
        <option value="ultimos-30" <%= filtros.periodo === 'ultimos-30' ? 'selected' : '' %>>√öltimos 30 dias</option>
        <option value="custom" <%= filtros.periodo === 'custom' ? 'selected' : '' %>>Per√≠odo personalizado</option>
      </select>
    </div>

    <!-- Campos de data personalizada (aparecem quando per√≠odo = custom) -->
    <div class="filter-group" id="customDateGroup" style="display: <%= filtros.periodo === 'custom' ? 'flex' : 'none' %>;">
      <span class="filter-label">De:</span>
      <input type="date" class="filter-input" id="dataInicio" value="<%= filtros.data_inicio || '' %>">
      <span class="filter-label">At√©:</span>
      <input type="date" class="filter-input" id="dataFim" value="<%= filtros.data_fim || '' %>">
    </div>

    <div class="filter-group">
      <span class="filter-label">Pesquisar:</span>
      <input type="text" class="filter-input" placeholder="Descri√ß√£o ou categoria" id="searchInput" value="<%= filtros.pesquisar || '' %>">
    </div>

    <div class="filter-group">
      <span class="filter-label">Tipo:</span>
      <select class="filter-select" id="tipoSelect">
        <option value="" <%= !filtros.tipo ? 'selected' : '' %>>Todos</option>
        <option value="CREDITO" <%= filtros.tipo === 'CREDITO' ? 'selected' : '' %>>Apenas Entradas</option>
        <option value="DEBITO" <%= filtros.tipo === 'DEBITO' ? 'selected' : '' %>>Apenas Sa√≠das</option>
      </select>
    </div>

    <button class="btn-modern btn-primary" onclick="aplicarFiltros()">
      üîç Filtrar
    </button>

    <button class="btn-modern btn-secondary" onclick="limparFiltros()">
      üóëÔ∏è Limpar
    </button>

    <button class="btn-modern btn-success" onclick="abrirModalLancamento()">
      ‚ûï Novo Lan√ßamento
    </button>
  </div>
</div>

<!-- M√©tricas Cards -->
<div class="metrics-grid">
  <div class="metric-card receitas-abertas">
    <div class="metric-label">Receitas em Aberto (R$)</div>
    <div class="metric-value">R$ <%= metricas.receitasAbertas.toLocaleString('pt-BR', {minimumFractionDigits: 2}) %></div>
  </div>

  <div class="metric-card receitas-realizadas">
    <div class="metric-label">Receitas Realizadas (R$)</div>
    <div class="metric-value positive">R$ <%= metricas.receitasRealizadas.toLocaleString('pt-BR', {minimumFractionDigits: 2}) %></div>
  </div>

  <div class="metric-card despesas-abertas">
    <div class="metric-label">Despesas em Aberto (R$)</div>
    <div class="metric-value">R$ <%= metricas.despesasAbertas.toLocaleString('pt-BR', {minimumFractionDigits: 2}) %></div>
  </div>

  <div class="metric-card despesas-realizadas">
    <div class="metric-label">Despesas Realizadas (R$)</div>
    <div class="metric-value negative">R$ <%= metricas.despesasRealizadas.toLocaleString('pt-BR', {minimumFractionDigits: 2}) %></div>
  </div>

  <div class="metric-card total-periodo">
    <div class="metric-label">Total do Per√≠odo (R$)</div>
    <div class="metric-value <%= metricas.saldoTotal >= 0 ? 'positive' : 'negative' %>">R$ <%= metricas.saldoTotal.toLocaleString('pt-BR', {minimumFractionDigits: 2}) %></div>
  </div>
</div>

<!-- Tabela de Lan√ßamentos -->
<div class="table-section">
  <div class="table-header">
    <h2 class="table-title">√öltimos Lan√ßamentos</h2>
    <div style="display: flex; align-items: center; gap: 15px;">
      <!-- Indicador de filtros ativos -->
      <% if (filtros.pesquisar || filtros.tipo || filtros.periodo !== 'mes-atual') { %>
        <span style="color: #3b82f6; font-size: 14px; background: #dbeafe; padding: 4px 8px; border-radius: 4px;">
          üîç Filtros ativos
        </span>
      <% } %>
      
      <span style="color: #64748b; font-size: 14px;">
        <%= lancamentos.length %> registro(s) encontrado(s)
      </span>
    </div>
  </div>

  <div style="overflow-x: auto;">
    <table class="data-table">
      <thead>
        <tr>
          <th>Data</th>
          <th>Descri√ß√£o</th>
          <th>Categoria</th>
          <th>Tipo</th>
          <th style="text-align: right;">Valor (R$)</th>
          <th>Status</th>
          <th>A√ß√µes</th>
        </tr>
      </thead>
      <tbody>
        <% if (lancamentos && lancamentos.length > 0) { %>
          <% lancamentos.forEach(item => { %>
            <tr>
              <td><%= new Date(item.data_operacao).toLocaleDateString('pt-BR', {timeZone: 'UTC'}) %></td>
              <td>
                <div>
                  <strong><%= item.descricao %></strong>
                  <% if (item.observacao) { %>
                    <br><small style="color: #64748b;"><%= item.observacao %></small>
                  <% } %>
                </div>
              </td>
              <td><span style="color: #64748b;"><%= item.categoria_nome || 'N√£o categorizado' %></span></td>
              <td>
                <span class="status-badge <%= item.tipo === 'CREDITO' ? 'status-pago' : 'status-pendente' %>">
                  <%= item.tipo === 'CREDITO' ? 'Entrada' : 'Sa√≠da' %>
                </span>
              </td>
              <td style="text-align: right;" class="<%= item.tipo === 'CREDITO' ? 'valor-positivo' : 'valor-negativo' %>">
                <%= item.tipo === 'CREDITO' ? '+' : '-' %> R$ <%= parseFloat(item.valor).toLocaleString('pt-BR', {minimumFractionDigits: 2}) %>
              </td>
              <td>
                <span class="status-badge status-pago">Pago</span>
              </td>
              <td>
                <form action="/fluxo-caixa/delete/<%= item.id %>" method="POST" style="display: inline;" onsubmit="return confirm('Tem certeza que deseja excluir este lan√ßamento?');">
                  <button type="submit" class="btn-modern btn-danger">üóëÔ∏è</button>
                </form>
              </td>
            </tr>
          <% }) %>
        <% } else { %>
          <tr>
            <td colspan="7" style="text-align: center; padding: 40px; color: #64748b;">
              Nenhum lan√ßamento encontrado.
            </td>
          </tr>
        <% } %>
      </tbody>
    </table>
  </div>
</div>

<!-- Modal para Novo Lan√ßamento -->
<div class="modal" id="modalLancamento">
  <div class="modal-content">
    <div class="modal-header">
      <h3 class="modal-title">Novo Lan√ßamento</h3>
    </div>
    <form action="/fluxo-caixa/lancamento" method="POST">
      <div class="modal-body">
        <div class="form-group">
          <label class="form-label">Data da Opera√ß√£o *</label>
          <input type="date" class="form-input" name="data_operacao" value="<%= hoje %>" required>
        </div>

        <div class="form-group">
          <label class="form-label">Tipo *</label>
          <select class="form-select" name="tipo" required>
            <option value="">Selecione...</option>
            <option value="CREDITO">Entrada (Cr√©dito)</option>
            <option value="DEBITO">Sa√≠da (D√©bito)</option>
          </select>
        </div>

        <div class="form-group">
          <label class="form-label">Valor (R$) *</label>
          <input type="number" class="form-input" name="valor" step="0.01" min="0.01" required>
        </div>

        <div class="form-group">
          <label class="form-label">Descri√ß√£o *</label>
          <input type="text" class="form-input" name="descricao" required>
        </div>

        <div class="form-group">
          <label class="form-label">Categoria *</label>
          <select class="form-select" name="categoria_id" required>
            <option value="">Selecione uma categoria...</option>
            <% categorias.forEach(cat => { %>
              <option value="<%= cat.id %>"><%= cat.nome %></option>
            <% }) %>
          </select>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn-modern btn-secondary" onclick="fecharModal()">Cancelar</button>
        <button type="submit" class="btn-modern btn-success">üíæ Salvar Lan√ßamento</button>
      </div>
    </form>
  </div>
</div>

<script>
// Fun√ß√µes JavaScript
function aplicarFiltros() {
  const periodo = document.getElementById('periodoSelect').value;
  const pesquisar = document.getElementById('searchInput').value;
  const tipo = document.getElementById('tipoSelect').value;
  
  // Construir URL com par√¢metros
  let url = '/fluxo-caixa?';
  const params = new URLSearchParams();
  
  if (periodo) params.append('periodo', periodo);
  if (pesquisar.trim()) params.append('pesquisar', pesquisar.trim());
  if (tipo) params.append('tipo', tipo);
  
  // Se per√≠odo personalizado, incluir datas
  if (periodo === 'custom') {
    const dataInicio = document.getElementById('dataInicio').value;
    const dataFim = document.getElementById('dataFim').value;
    if (dataInicio) params.append('data_inicio', dataInicio);
    if (dataFim) params.append('data_fim', dataFim);
  }
  
  // Redirecionar com os filtros
  window.location.href = url + params.toString();
}

// Fun√ß√£o para limpar filtros
function limparFiltros() {
  window.location.href = '/fluxo-caixa';
}

// Mostrar/esconder campos de data personalizada
document.getElementById('periodoSelect').addEventListener('change', function() {
  const customDateGroup = document.getElementById('customDateGroup');
  if (this.value === 'custom') {
    customDateGroup.style.display = 'flex';
    
    // Definir datas padr√£o (m√™s atual)
    const hoje = new Date();
    const inicioMes = new Date(hoje.getFullYear(), hoje.getMonth(), 1);
    const fimMes = new Date(hoje.getFullYear(), hoje.getMonth() + 1, 0);
    
    document.getElementById('dataInicio').value = inicioMes.toISOString().split('T')[0];
    document.getElementById('dataFim').value = fimMes.toISOString().split('T')[0];
  } else {
    customDateGroup.style.display = 'none';
  }
});

// Aplicar filtros quando Enter √© pressionado no campo de pesquisa
document.getElementById('searchInput').addEventListener('keypress', function(e) {
  if (e.key === 'Enter') {
    aplicarFiltros();
  }
});

// Aplicar filtros quando campos mudam
document.getElementById('periodoSelect').addEventListener('change', aplicarFiltros);
document.getElementById('tipoSelect').addEventListener('change', aplicarFiltros);

function abrirModalLancamento() {
  document.getElementById('modalLancamento').style.display = 'flex';
}

function fecharModal() {
  document.getElementById('modalLancamento').style.display = 'none';
}

// Fechar modal clicando fora
window.onclick = function(event) {
  const modal = document.getElementById('modalLancamento');
  if (event.target === modal) {
    fecharModal();
  }
}

// Inicializar campos de data personalizada se j√° estiver selecionado
document.addEventListener('DOMContentLoaded', function() {
  const periodoSelect = document.getElementById('periodoSelect');
  const customDateGroup = document.getElementById('customDateGroup');
  
  if (periodoSelect.value === 'custom') {
    customDateGroup.style.display = 'flex';
  }
});
</script>

<%- include('partials/footer') %>