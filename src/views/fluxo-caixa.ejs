<%- include('partials/header', { currentPage: 'fluxo-caixa', subtitulo: 'Gestão Financeira' }) %>

<style>
:root {
  --primary-color: #1e3b5f;
  --success-color: #10b981;
  --danger-color: #ef4444;
  --warning-color: #f59e0b;
  --info-color: #3b82f6;
  --surface-color: #ffffff;
  --background-color: #f8fafc;
  --text-primary: #1e293b;
  --text-secondary: #64748b;
  --text-muted: #94a3b8;
  --border-color: #e2e8f0;
  --shadow-sm: 0 1px 2px rgba(0,0,0,0.05);
  --shadow-md: 0 4px 6px rgba(0,0,0,0.1);
  --radius-sm: 6px;
  --radius-md: 8px;
  --radius-lg: 12px;
}

.fluxo-workspace {
  max-width: 1400px;
  margin: 0 auto;
  padding: 24px;
  background: var(--background-color);
}

/* BULK ACTIONS BAR */
.bulk-actions-bar {
  position: fixed;
  bottom: 24px;
  left: 50%;
  transform: translateX(-50%) translateY(100px);
  background: var(--primary-color);
  color: white;
  padding: 16px 24px;
  border-radius: var(--radius-lg);
  box-shadow: 0 10px 25px rgba(0,0,0,0.3);
  display: flex;
  align-items: center;
  gap: 16px;
  z-index: 1000;
  opacity: 0;
  pointer-events: none;
  transition: all 0.3s ease;
}

.bulk-actions-bar.active {
  transform: translateX(-50%) translateY(0);
  opacity: 1;
  pointer-events: all;
}

.bulk-count {
  font-weight: 600;
  font-size: 15px;
}

.bulk-actions {
  display: flex;
  gap: 12px;
  margin-left: 8px;
}

.btn-bulk {
  padding: 8px 16px;
  border-radius: var(--radius-sm);
  border: none;
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s;
  display: flex;
  align-items: center;
  gap: 6px;
}

.btn-bulk-cancel {
  background: rgba(255,255,255,0.2);
  color: white;
}

.btn-bulk-cancel:hover {
  background: rgba(255,255,255,0.3);
}

.btn-bulk-delete {
  background: var(--danger-color);
  color: white;
}

.btn-bulk-delete:hover {
  background: #dc2626;
}

/* CHECKBOX STYLES */
.table-checkbox {
  width: 18px;
  height: 18px;
  cursor: pointer;
  accent-color: var(--primary-color);
}

.th-checkbox {
  width: 50px;
  text-align: center;
}

.td-checkbox {
  text-align: center;
}

/* TRANSACTION ROW SELECTED STATE */
.transaction-row.selected {
  background: #dbeafe !important;
}

/* CONFIRMATION MODAL */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0,0,0,0.5);
  z-index: 2000;
  display: none;
  align-items: center;
  justify-content: center;
}

.modal-overlay.active {
  display: flex;
}

.modal-content {
  background: white;
  border-radius: var(--radius-lg);
  padding: 32px;
  max-width: 500px;
  width: 90%;
  box-shadow: 0 20px 50px rgba(0,0,0,0.3);
}

.modal-header {
  display: flex;
  align-items: center;
  gap: 12px;
  margin-bottom: 16px;
}

.modal-icon {
  width: 48px;
  height: 48px;
  background: #fee2e2;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--danger-color);
}

.modal-title {
  font-size: 20px;
  font-weight: 600;
  color: var(--text-primary);
}

.modal-body {
  margin-bottom: 24px;
  color: var(--text-secondary);
  line-height: 1.6;
}

.modal-warning {
  background: #fef3c7;
  border-left: 4px solid var(--warning-color);
  padding: 12px 16px;
  border-radius: var(--radius-sm);
  margin-top: 16px;
  font-size: 14px;
}

.modal-actions {
  display: flex;
  gap: 12px;
  justify-content: flex-end;
}

.btn-modal {
  padding: 10px 20px;
  border-radius: var(--radius-sm);
  border: none;
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s;
}

.btn-modal-cancel {
  background: #f1f5f9;
  color: var(--text-primary);
}

.btn-modal-cancel:hover {
  background: #e2e8f0;
}

.btn-modal-confirm {
  background: var(--danger-color);
  color: white;
}

.btn-modal-confirm:hover {
  background: #dc2626;
}

/* TRANSACTION MODAL STYLES */
.modal-close-btn {
  background: none;
  border: none;
  color: var(--text-secondary);
  cursor: pointer;
  padding: 4px;
  border-radius: var(--radius-sm);
  transition: all 0.2s;
  display: flex;
  align-items: center;
  justify-content: center;
}

.modal-close-btn:hover {
  background: #f3f4f6;
  color: var(--text-primary);
}

.form-row-modal {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 16px;
  margin-bottom: 16px;
}

.form-field-modal {
  display: flex;
  flex-direction: column;
  gap: 6px;
}

.field-label-modal {
  font-size: 14px;
  font-weight: 500;
  color: var(--text-primary);
  display: flex;
  align-items: center;
  gap: 6px;
}

.field-input-modal {
  padding: 10px 12px;
  border: 1px solid var(--border-color);
  border-radius: var(--radius-sm);
  font-size: 14px;
  transition: border-color 0.2s;
}

.field-input-modal:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 3px rgba(30, 64, 175, 0.1);
}

@media (max-width: 768px) {
  .form-row-modal {
    grid-template-columns: 1fr;
  }
  
  .control-group.custom-dates {
    flex-direction: column;
    align-items: stretch;
  }
  
  .date-range {
    width: 100%;
  }
  
  .date-input {
    width: 100%;
    min-width: auto;
  }
}

/* RESULTS MODAL */
.results-list {
  max-height: 300px;
  overflow-y: auto;
  margin-top: 16px;
}

.result-item {
  padding: 12px;
  border-radius: var(--radius-sm);
  margin-bottom: 8px;
  display: flex;
  align-items: center;
  gap: 12px;
  font-size: 14px;
}

.result-item.success {
  background: #dcfce7;
  color: #166534;
}

.result-item.blocked {
  background: #fef3c7;
  color: #92400e;
}

.result-item.error {
  background: #fee2e2;
  color: #991b1b;
}

.result-icon {
  flex-shrink: 0;
}

/* METRICS CARDS */
.metrics-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 16px;
  margin-bottom: 24px;
}

.metric-card {
  background: var(--surface-color);
  border-radius: var(--radius-lg);
  padding: 20px;
  box-shadow: var(--shadow-sm);
  border: 1px solid var(--border-color);
}

.metric-label {
  font-size: 13px;
  color: var(--text-secondary);
  margin-bottom: 8px;
  font-weight: 500;
}

.metric-value {
  font-size: 24px;
  font-weight: 700;
  color: var(--text-primary);
}

.metric-income { color: var(--success-color); }
.metric-expense { color: var(--danger-color); }
.metric-positive-value { color: var(--success-color); }
.metric-negative-value { color: var(--danger-color); }

/* TRANSACTIONS TABLE */
.transactions-section {
  background: var(--surface-color);
  border-radius: var(--radius-lg);
  box-shadow: var(--shadow-sm);
  border: 1px solid var(--border-color);
  margin-top: 24px;
}

.financial-table {
  width: 100%;
  border-collapse: collapse;
}

.financial-table th {
  background: #f8fafc;
  padding: 16px;
  text-align: left;
  font-size: 12px;
  font-weight: 600;
  color: var(--text-secondary);
  text-transform: uppercase;
  border-bottom: 1px solid var(--border-color);
}

.financial-table td {
  padding: 16px;
  border-bottom: 1px solid #f1f5f9;
}

.transaction-row:hover {
  background: #f8fafc;
}

.type-badge {
  display: inline-flex;
  align-items: center;
  gap: 6px;
  padding: 6px 12px;
  border-radius: var(--radius-sm);
  font-size: 12px;
  font-weight: 500;
}

.type-credit {
  background: #dcfce7;
  color: #166534;
}

.type-debit {
  background: #fee2e2;
  color: #991b1b;
}

.amount-value {
  font-weight: 600;
  font-size: 15px;
}

.amount-credit { color: var(--success-color); }
.amount-debit { color: var(--danger-color); }

.status-badge {
  padding: 4px 8px;
  border-radius: var(--radius-sm);
  font-size: 12px;
  font-weight: 500;
}

.status-paid {
  background: #dcfce7;
  color: #166534;
}

.action-buttons {
  display: flex;
  gap: 8px;
}

.btn-action {
  padding: 6px 12px;
  border-radius: var(--radius-sm);
  border: 1px solid var(--border-color);
  background: white;
  color: var(--text-secondary);
  font-size: 12px;
  cursor: pointer;
  transition: all 0.2s;
}

.btn-action:hover {
  background: var(--background-color);
  border-color: var(--primary-color);
  color: var(--primary-color);
}

.btn-delete {
  border-color: #fecaca;
  color: var(--danger-color);
}

.btn-delete:hover {
  background: #fee2e2;
  border-color: var(--danger-color);
}

.btn-undo {
  border-color: #fde68a;
  color: var(--warning-color);
}

.btn-undo:hover {
  background: #fef3c7;
  border-color: var(--warning-color);
}
</style>

<div class="fluxo-workspace">
  <!-- PAGE HEADER -->
  <div class="page-header">
    <div class="header-content">
      <h1 class="page-title">💰 Fluxo de Caixa</h1>
      <button type="button" class="btn-new-transaction" onclick="abrirModal()">
        <svg width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <line x1="12" y1="5" x2="12" y2="19"></line>
          <line x1="5" y1="12" x2="19" y2="12"></line>
        </svg>
        Novo Lançamento
      </button>
    </div>
  </div>

  <!-- METRICS -->
  <div class="metrics-grid">
    <div class="metric-card">
      <div class="metric-label">Receitas Realizadas</div>
      <div class="metric-value metric-income">
        R$ <%= metricas.receitasRealizadas.toLocaleString('pt-BR', {minimumFractionDigits: 2}) %>
      </div>
    </div>
    
    <div class="metric-card">
      <div class="metric-label">Despesas Realizadas</div>
      <div class="metric-value metric-expense">
        R$ <%= metricas.despesasRealizadas.toLocaleString('pt-BR', {minimumFractionDigits: 2}) %>
      </div>
    </div>
    
    <div class="metric-card">
      <div class="metric-label">Receitas em Aberto</div>
      <div class="metric-value">
        R$ <%= metricas.receitasAbertas.toLocaleString('pt-BR', {minimumFractionDigits: 2}) %>
      </div>
    </div>
    
    <div class="metric-card">
      <div class="metric-label">Despesas em Aberto</div>
      <div class="metric-value">
        R$ <%= metricas.despesasAbertas.toLocaleString('pt-BR', {minimumFractionDigits: 2}) %>
      </div>
    </div>
    
    <div class="metric-card">
      <div class="metric-label">Saldo Total</div>
      <div class="metric-value <%= metricas.saldoTotal >= 0 ? 'metric-positive-value' : 'metric-negative-value' %>">
        R$ <%= metricas.saldoTotal.toLocaleString('pt-BR', {minimumFractionDigits: 2}) %>
      </div>
    </div>
  </div>

  <!-- TRANSACTIONS TABLE -->
  <div class="transactions-section">
    <div class="table-container">
      <table class="financial-table">
        <thead>
          <tr>
            <th class="th-checkbox">
              <input 
                type="checkbox" 
                id="selectAll" 
                class="table-checkbox" 
                onchange="toggleSelectAll(this)"
                title="Selecionar todos"
              >
            </th>
            <th>Data</th>
            <th>Descrição</th>
            <th>Categoria</th>
            <th>Tipo</th>
            <th>Valor</th>
            <th>Status</th>
            <th>Ações</th>
          </tr>
        </thead>
        <tbody>
          <% if (lancamentos && lancamentos.length > 0) { %>
            <% lancamentos.forEach(item => { %>
              <tr class="transaction-row" data-id="<%= item.id %>">
                <td class="td-checkbox">
                  <input 
                    type="checkbox" 
                    class="table-checkbox item-checkbox" 
                    value="<%= item.id %>"
                    onchange="updateBulkActions()"
                  >
                </td>
                <td><%= new Date(item.data_operacao).toLocaleDateString('pt-BR', {timeZone: 'UTC'}) %></td>
                <td>
                  <div><%= item.descricao %></div>
                  <% if (item.observacao) { %>
                    <small style="color: #94a3b8;"><%= item.observacao %></small>
                  <% } %>
                </td>
                <td><%= item.categoria_nome || 'Sem categoria' %></td>
                <td>
                  <span class="type-badge <%= item.tipo === 'CREDITO' ? 'type-credit' : 'type-debit' %>">
                    <%= item.tipo === 'CREDITO' ? '↑ Crédito' : '↓ Débito' %>
                  </span>
                </td>
                <td>
                  <span class="amount-value <%= item.tipo === 'CREDITO' ? 'amount-credit' : 'amount-debit' %>">
                    R$ <%= parseFloat(item.valor).toLocaleString('pt-BR', {minimumFractionDigits: 2}) %>
                  </span>
                </td>
                <td>
                  <span class="status-badge status-paid">Pago</span>
                </td>
                <td>
                  <div class="action-buttons">
                    <form method="POST" action="/fluxo-caixa/estornar/<%= item.id %>" style="display: inline;">
                      <button type="submit" class="btn-action btn-undo" onclick="return confirm('Estornar este lançamento?')">
                        Estornar
                      </button>
                    </form>
                    <form method="POST" action="/fluxo-caixa/delete/<%= item.id %>" style="display: inline;">
                      <button type="submit" class="btn-action btn-delete" onclick="return confirm('Excluir este lançamento?')">
                        Excluir
                      </button>
                    </form>
                  </div>
                </td>
              </tr>
            <% }) %>
          <% } else { %>
            <tr>
              <td colspan="8" style="text-align: center; padding: 40px; color: #94a3b8;">
                Nenhum lançamento encontrado
              </td>
            </tr>
          <% } %>
        </tbody>
      </table>
    </div>
  </div>
</div>

<!-- BULK ACTIONS BAR -->
<div class="bulk-actions-bar" id="bulkActionsBar">
  <div class="bulk-count">
    <span id="selectedCount">0</span> item(s) selecionado(s)
  </div>
  <div class="bulk-actions">
    <button class="btn-bulk btn-bulk-cancel" onclick="clearSelection()">
      Cancelar
    </button>
    <button class="btn-bulk btn-bulk-delete" onclick="showDeleteConfirmation()">
      <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <polyline points="3,6 5,6 21,6"></polyline>
        <path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path>
      </svg>
      Excluir Selecionados
    </button>
  </div>
</div>

<!-- CONFIRMATION MODAL -->
<div class="modal-overlay" id="confirmModal">
  <div class="modal-content">
    <div class="modal-header">
      <div class="modal-icon">
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <circle cx="12" cy="12" r="10"></circle>
          <line x1="12" y1="8" x2="12" y2="12"></line>
          <line x1="12" y1="16" x2="12.01" y2="16"></line>
        </svg>
      </div>
      <div class="modal-title">Confirmar Exclusão em Massa</div>
    </div>
    <div class="modal-body">
      <p>Você está prestes a excluir <strong id="confirmCount">0</strong> lançamento(s) do fluxo de caixa.</p>
      <div class="modal-warning">
        ⚠️ <strong>Atenção:</strong> Lançamentos vinculados a contas a receber/pagar não serão excluídos e você receberá um relatório detalhado.
      </div>
    </div>
    <div class="modal-actions">
      <button class="btn-modal btn-modal-cancel" onclick="closeConfirmModal()">
        Cancelar
      </button>
      <button class="btn-modal btn-modal-confirm" onclick="executeBulkDelete()">
        Confirmar Exclusão
      </button>
    </div>
  </div>
</div>

<!-- RESULTS MODAL -->
<div class="modal-overlay" id="resultsModal">
  <div class="modal-content">
    <div class="modal-header">
      <div class="modal-title">Resultado da Exclusão</div>
    </div>
    <div class="modal-body">
      <p><strong>Total processado:</strong> <span id="resultTotal">0</span></p>
      <p><strong>Excluídos com sucesso:</strong> <span id="resultSuccess" style="color: #10b981;">0</span></p>
      <p><strong>Bloqueados (vinculados):</strong> <span id="resultBlocked" style="color: #f59e0b;">0</span></p>
      <p><strong>Erros:</strong> <span id="resultErrors" style="color: #ef4444;">0</span></p>
      <div class="results-list" id="resultsList"></div>
    </div>
    <div class="modal-actions">
      <button class="btn-modal btn-modal-cancel" onclick="closeResultsModal()">
        Fechar
      </button>
    </div>
  </div>
</div>

<!-- NEW TRANSACTION MODAL -->
<div class="modal-overlay" id="modalLancamento">
  <div class="modal-content" style="max-width: 600px;">
    <div class="modal-header">
      <div class="modal-title">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <line x1="12" y1="5" x2="12" y2="19"></line>
          <line x1="5" y1="12" x2="19" y2="12"></line>
        </svg>
        Novo Lançamento Financeiro
      </div>
      <button type="button" class="modal-close-btn" onclick="fecharModal()">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
          <line x1="18" y1="6" x2="6" y2="18"></line>
          <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
      </button>
    </div>
    
    <form action="/fluxo-caixa/lancamento" method="POST">
      <div class="modal-body">
        <div class="form-row-modal">
          <div class="form-field-modal">
            <label class="field-label-modal">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                <line x1="16" y1="2" x2="16" y2="6"></line>
                <line x1="8" y1="2" x2="8" y2="6"></line>
                <line x1="3" y1="10" x2="21" y2="10"></line>
              </svg>
              Data da Operação
            </label>
            <input type="date" class="field-input-modal" name="data_operacao" value="<%= hoje %>" required>
          </div>
          
          <div class="form-field-modal">
            <label class="field-label-modal">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <polyline points="6,9 12,15 18,9"></polyline>
              </svg>
              Tipo de Movimento
            </label>
            <select class="field-input-modal" name="tipo" required>
              <option value="">Selecione o tipo...</option>
              <option value="CREDITO">Entrada (Crédito)</option>
              <option value="DEBITO">Saída (Débito)</option>
            </select>
          </div>
        </div>

        <div class="form-row-modal">
          <div class="form-field-modal">
            <label class="field-label-modal">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M12 2v20M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"/>
              </svg>
              Valor (R$)
            </label>
            <input type="number" class="field-input-modal" name="valor" step="0.01" min="0.01" placeholder="0,00" required>
          </div>
          
          <div class="form-field-modal">
            <label class="field-label-modal">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"></path>
                <rect x="8" y="2" width="8" height="4" rx="1" ry="1"></rect>
              </svg>
              Categoria
            </label>
            <select class="field-input-modal" name="categoria_id" required>
              <option value="">Selecione uma categoria...</option>
              <% categorias.forEach(cat => { %>
                <option value="<%= cat.id %>"><%= cat.nome %></option>
              <% }) %>
            </select>
          </div>
        </div>

        <div class="form-field-modal" style="grid-column: 1 / -1;">
          <label class="field-label-modal">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path>
              <polyline points="14,2 14,8 20,8"></polyline>
              <line x1="16" y1="13" x2="8" y2="13"></line>
              <line x1="16" y1="17" x2="8" y2="17"></line>
            </svg>
            Descrição
          </label>
          <input type="text" class="field-input-modal" name="descricao" placeholder="Descreva a movimentação financeira..." required>
        </div>
      </div>
      
      <div class="modal-actions">
        <button type="button" class="btn-modal btn-modal-cancel" onclick="fecharModal()">
          Cancelar
        </button>
        <button type="submit" class="btn-modal btn-modal-confirm">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
            <polyline points="20,6 9,17 4,12"></polyline>
          </svg>
          Salvar Lançamento
        </button>
      </div>
    </form>
  </div>
</div>

<script>
// Gestão de seleção
function updateBulkActions() {
  const checkboxes = document.querySelectorAll('.item-checkbox:checked');
  const count = checkboxes.length;
  const bar = document.getElementById('bulkActionsBar');
  const countElement = document.getElementById('selectedCount');
  
  countElement.textContent = count;
  
  if (count > 0) {
    bar.classList.add('active');
    checkboxes.forEach(cb => {
      cb.closest('.transaction-row').classList.add('selected');
    });
  } else {
    bar.classList.remove('active');
    document.querySelectorAll('.transaction-row').forEach(row => {
      row.classList.remove('selected');
    });
  }
  
  // Atualizar checkbox "selecionar todos"
  const allCheckboxes = document.querySelectorAll('.item-checkbox');
  const selectAllCheckbox = document.getElementById('selectAll');
  selectAllCheckbox.checked = allCheckboxes.length > 0 && count === allCheckboxes.length;
}

function toggleSelectAll(checkbox) {
  const itemCheckboxes = document.querySelectorAll('.item-checkbox');
  itemCheckboxes.forEach(cb => {
    cb.checked = checkbox.checked;
  });
  updateBulkActions();
}

function clearSelection() {
  document.querySelectorAll('.item-checkbox').forEach(cb => {
    cb.checked = false;
  });
  document.getElementById('selectAll').checked = false;
  updateBulkActions();
}

// Modal de confirmação
function showDeleteConfirmation() {
  const count = document.querySelectorAll('.item-checkbox:checked').length;
  document.getElementById('confirmCount').textContent = count;
  document.getElementById('confirmModal').classList.add('active');
}

function closeConfirmModal() {
  document.getElementById('confirmModal').classList.remove('active');
}

// Executar exclusão em massa
async function executeBulkDelete() {
  const checkboxes = document.querySelectorAll('.item-checkbox:checked');
  const ids = Array.from(checkboxes).map(cb => cb.value);
  
  closeConfirmModal();
  
  try {
    const response = await fetch('/fluxo-caixa/bulk-delete', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ ids })
    });
    
    const data = await response.json();
    
    if (data.success) {
      showResults(data.resultados);
      
      // Recarregar após 3 segundos
      setTimeout(() => {
        window.location.reload();
      }, 3000);
    } else {
      alert('Erro: ' + data.message);
    }
  } catch (error) {
    alert('Erro ao processar exclusão: ' + error.message);
  }
}

// Mostrar resultados
function showResults(resultados) {
  document.getElementById('resultTotal').textContent = resultados.total;
  document.getElementById('resultSuccess').textContent = resultados.excluidos;
  document.getElementById('resultBlocked').textContent = resultados.bloqueados;
  document.getElementById('resultErrors').textContent = resultados.erros;
  
  const listContainer = document.getElementById('resultsList');
  listContainer.innerHTML = '';
  
  resultados.detalhes.forEach(detalhe => {
    const item = document.createElement('div');
    item.className = `result-item ${detalhe.status === 'excluido' ? 'success' : detalhe.status === 'bloqueado' ? 'blocked' : 'error'}`;
    
    const icon = detalhe.status === 'excluido' ? '✓' : detalhe.status === 'bloqueado' ? '⚠' : '✕';
    const text = detalhe.status === 'excluido' ? 'Excluído' : detalhe.status === 'bloqueado' ? 'Bloqueado: ' + detalhe.motivo : 'Erro: ' + detalhe.motivo;
    
    item.innerHTML = `
      <span class="result-icon">${icon}</span>
      <span>ID ${detalhe.id}: ${text}</span>
    `;
    
    listContainer.appendChild(item);
  });
  
  document.getElementById('resultsModal').classList.add('active');
}

function closeResultsModal() {
  document.getElementById('resultsModal').classList.remove('active');
}

// Fechar modals ao clicar fora
document.querySelectorAll('.modal-overlay').forEach(modal => {
  modal.addEventListener('click', (e) => {
    if (e.target === modal) {
      modal.classList.remove('active');
      document.body.style.overflow = 'auto';
    }
  });
});

// Funções para o modal de novo lançamento
function abrirModal() {
  document.getElementById('modalLancamento').classList.add('active');
  document.body.style.overflow = 'hidden';
}

function fecharModal() {
  document.getElementById('modalLancamento').classList.remove('active');
  document.body.style.overflow = 'auto';
}
</script>

<%- include('partials/footer') %>